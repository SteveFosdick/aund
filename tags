!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACLOCAL	makefile	/^ACLOCAL = aclocal-1.16$/;"	m
ACLOCAL_M4	makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AMTAR	makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CFLAGS	makefile	/^AM_CFLAGS = $(GCCWARNINGS)$/;"	m
AM_DEFAULT_VERBOSITY	makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DISTCHECK_DVI_TARGET	makefile	/^AM_DISTCHECK_DVI_TARGET = dvi$/;"	m
AM_RECURSIVE_TARGETS	makefile	/^AM_RECURSIVE_TARGETS = cscope$/;"	m
AM_V_AR	makefile	/^AM_V_AR = $(am__v_AR_$(V))$/;"	m
AM_V_CC	makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_GEN	makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_LEX	makefile	/^AM_V_LEX = $(am__v_LEX_$(V))$/;"	m
AM_V_P	makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AR	makefile	/^AR = ar$/;"	m
ARFLAGS	makefile	/^ARFLAGS = cru$/;"	m
AUND_FS_DESCR	version.h	/^#define AUND_FS_DESCR /;"	d
AUND_MACHINE_PEEK_HI	version.h	/^#define AUND_MACHINE_PEEK_HI /;"	d
AUND_MACHINE_PEEK_LO	version.h	/^#define AUND_MACHINE_PEEK_LO /;"	d
AUND_VERSION_H	version.h	/^#define AUND_VERSION_H$/;"	d
AUND_VERSION_MAJOR	version.h	/^#define AUND_VERSION_MAJOR /;"	d
AUND_VERSION_MINOR	version.h	/^#define AUND_VERSION_MINOR /;"	d
AUN_MAX_BLOCK	aun.h	/^#define AUN_MAX_BLOCK /;"	d
AUN_TYPE_ACK	aun.h	/^#define AUN_TYPE_ACK	/;"	d
AUN_TYPE_BROADCAST	aun.h	/^#define AUN_TYPE_BROADCAST	/;"	d
AUN_TYPE_IMMEDIATE	aun.h	/^#define AUN_TYPE_IMMEDIATE	/;"	d
AUN_TYPE_IMM_REPLY	aun.h	/^#define AUN_TYPE_IMM_REPLY	/;"	d
AUN_TYPE_REJ	aun.h	/^#define AUN_TYPE_REJ	/;"	d
AUN_TYPE_UNICAST	aun.h	/^#define AUN_TYPE_UNICAST	/;"	d
AUTOCONF	makefile	/^AUTOCONF = autoconf$/;"	m
AUTOHEADER	makefile	/^AUTOHEADER = autoheader$/;"	m
AUTOMAKE	makefile	/^AUTOMAKE = automake-1.16$/;"	m
AWK	makefile	/^AWK = awk$/;"	m
BEGIN	conf_lex.c	/^#define BEGIN /;"	d	file:
BOOLEAN	conf_lex.c	/^#define BOOLEAN /;"	d	file:
BORING	conf_lex.c	/^#define BORING /;"	d	file:
CC	makefile	/^CC = gcc$/;"	m
CCDEPMODE	makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	makefile	/^CFLAGS = -g -O2$/;"	m
CF_BOOLEAN	conf_lex.c	/^#define CF_BOOLEAN /;"	d	file:
CF_EOF	conf_lex.c	/^#define CF_EOF /;"	d	file:
CF_FUNC	conf_lex.c	/^#define CF_FUNC /;"	d	file:
CF_NEWLINE	conf_lex.c	/^#define CF_NEWLINE /;"	d	file:
CF_WORD	conf_lex.c	/^#define CF_WORD /;"	d	file:
COMPILE	makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	makefile	/^CONFIG_HEADER = config.h$/;"	m
CPP	makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	makefile	/^CPPFLAGS = $/;"	m
CSCOPE	makefile	/^CSCOPE = cscope$/;"	m
CTAGS	makefile	/^CTAGS = ctags$/;"	m
CYGPATH_W	makefile	/^CYGPATH_W = echo$/;"	m
DEFAULT_INCLUDES	makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFS	makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	makefile	/^DEPDIR = .deps$/;"	m
DISTFILES	makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_SOURCES	makefile	/^DIST_SOURCES = $(libconf_lex_a_SOURCES) $(aund_SOURCES)$/;"	m
DIST_TARGETS	makefile	/^DIST_TARGETS = dist-gzip$/;"	m
ECHO	conf_lex.c	/^#define ECHO /;"	d	file:
ECHO_C	makefile	/^ECHO_C = \\c$/;"	m
ECHO_N	makefile	/^ECHO_N = $/;"	m
ECHO_T	makefile	/^ECHO_T = $/;"	m
EC_FS_ACCESS_D	fs_proto.h	/^#define EC_FS_ACCESS_D	/;"	d
EC_FS_ACCESS_L	fs_proto.h	/^#define EC_FS_ACCESS_L	/;"	d
EC_FS_ACCESS_OR	fs_proto.h	/^#define EC_FS_ACCESS_OR	/;"	d
EC_FS_ACCESS_OW	fs_proto.h	/^#define EC_FS_ACCESS_OW	/;"	d
EC_FS_ACCESS_UR	fs_proto.h	/^#define EC_FS_ACCESS_UR	/;"	d
EC_FS_ACCESS_UW	fs_proto.h	/^#define EC_FS_ACCESS_UW	/;"	d
EC_FS_ARG_EXT	fs_proto.h	/^#define EC_FS_ARG_EXT /;"	d
EC_FS_ARG_PTR	fs_proto.h	/^#define EC_FS_ARG_PTR /;"	d
EC_FS_ARG_SIZE	fs_proto.h	/^#define EC_FS_ARG_SIZE /;"	d
EC_FS_CC_CAT	fs_proto.h	/^#define EC_FS_CC_CAT	/;"	d
EC_FS_CC_DIR	fs_proto.h	/^#define EC_FS_CC_DIR	/;"	d
EC_FS_CC_DISCS	fs_proto.h	/^#define EC_FS_CC_DISCS /;"	d
EC_FS_CC_DONE	fs_proto.h	/^#define EC_FS_CC_DONE	/;"	d
EC_FS_CC_INFO	fs_proto.h	/^#define EC_FS_CC_INFO	/;"	d
EC_FS_CC_LIB	fs_proto.h	/^#define EC_FS_CC_LIB	/;"	d
EC_FS_CC_LOAD	fs_proto.h	/^#define EC_FS_CC_LOAD	/;"	d
EC_FS_CC_LOGON	fs_proto.h	/^#define EC_FS_CC_LOGON	/;"	d
EC_FS_CC_SAVE	fs_proto.h	/^#define EC_FS_CC_SAVE	/;"	d
EC_FS_CC_SDISC	fs_proto.h	/^#define EC_FS_CC_SDISC	/;"	d
EC_FS_CC_UNREC	fs_proto.h	/^#define EC_FS_CC_UNREC	/;"	d
EC_FS_EXAMINE_ALL	fs_proto.h	/^#define EC_FS_EXAMINE_ALL	/;"	d
EC_FS_EXAMINE_LONGTXT	fs_proto.h	/^#define EC_FS_EXAMINE_LONGTXT	/;"	d
EC_FS_EXAMINE_NAME	fs_proto.h	/^#define EC_FS_EXAMINE_NAME	/;"	d
EC_FS_EXAMINE_SHORTTXT	fs_proto.h	/^#define EC_FS_EXAMINE_SHORTTXT	/;"	d
EC_FS_E_BADACCESS	fs_errors.h	/^#define EC_FS_E_BADACCESS	/;"	d
EC_FS_E_BADARGS	fs_errors.h	/^#define EC_FS_E_BADARGS	/;"	d
EC_FS_E_BADCMD	fs_errors.h	/^#define EC_FS_E_BADCMD	/;"	d
EC_FS_E_BADDISC	fs_errors.h	/^#define EC_FS_E_BADDISC	/;"	d
EC_FS_E_BADEXAMINE	fs_errors.h	/^#define EC_FS_E_BADEXAMINE	/;"	d
EC_FS_E_BADINFO	fs_errors.h	/^#define EC_FS_E_BADINFO	/;"	d
EC_FS_E_BADNAME	fs_errors.h	/^#define EC_FS_E_BADNAME	/;"	d
EC_FS_E_BADPW	fs_errors.h	/^#define EC_FS_E_BADPW	/;"	d
EC_FS_E_BADSTR	fs_errors.h	/^#define EC_FS_E_BADSTR	/;"	d
EC_FS_E_BADUSER	fs_errors.h	/^#define EC_FS_E_BADUSER	/;"	d
EC_FS_E_CHANNEL	fs_errors.h	/^#define EC_FS_E_CHANNEL	/;"	d
EC_FS_E_DIRFULL	fs_errors.h	/^#define EC_FS_E_DIRFULL	/;"	d
EC_FS_E_DIRNOTEMPTY	fs_errors.h	/^#define EC_FS_E_DIRNOTEMPTY	/;"	d
EC_FS_E_DISCERR	fs_errors.h	/^#define EC_FS_E_DISCERR	/;"	d
EC_FS_E_DISCFULL	fs_errors.h	/^#define EC_FS_E_DISCFULL	/;"	d
EC_FS_E_DISCPROT	fs_errors.h	/^#define EC_FS_E_DISCPROT	/;"	d
EC_FS_E_EOF	fs_errors.h	/^#define EC_FS_E_EOF	/;"	d
EC_FS_E_ISDIR	fs_errors.h	/^#define EC_FS_E_ISDIR	/;"	d
EC_FS_E_LOCKED	fs_errors.h	/^#define EC_FS_E_LOCKED	/;"	d
EC_FS_E_MANYOPEN	fs_errors.h	/^#define EC_FS_E_MANYOPEN	/;"	d
EC_FS_E_MANYUSERS	fs_errors.h	/^#define EC_FS_E_MANYUSERS	/;"	d
EC_FS_E_MAPDISCERR	fs_errors.h	/^#define EC_FS_E_MAPDISCERR	/;"	d
EC_FS_E_NOACCESS	fs_errors.h	/^#define EC_FS_E_NOACCESS	/;"	d
EC_FS_E_NOMEM	fs_errors.h	/^#define EC_FS_E_NOMEM	/;"	d
EC_FS_E_NOPRIV	fs_errors.h	/^#define EC_FS_E_NOPRIV	/;"	d
EC_FS_E_NOTDIR	fs_errors.h	/^#define EC_FS_E_NOTDIR	/;"	d
EC_FS_E_NOTFOUND	fs_errors.h	/^#define EC_FS_E_NOTFOUND	/;"	d
EC_FS_E_OBJNOTFILE	fs_errors.h	/^#define EC_FS_E_OBJNOTFILE /;"	d
EC_FS_E_OPEN	fs_errors.h	/^#define EC_FS_E_OPEN	/;"	d
EC_FS_E_OUTSIDEFILE	fs_errors.h	/^#define EC_FS_E_OUTSIDEFILE	/;"	d
EC_FS_E_PWFFULL	fs_errors.h	/^#define EC_FS_E_PWFFULL	/;"	d
EC_FS_E_RDONLY	fs_errors.h	/^#define EC_FS_E_RDONLY	/;"	d
EC_FS_E_RENXDEV	fs_errors.h	/^#define EC_FS_E_RENXDEV	/;"	d
EC_FS_E_TYPENMATC	fs_errors.h	/^#define EC_FS_E_TYPENMATC /;"	d
EC_FS_E_USEREXIST	fs_errors.h	/^#define EC_FS_E_USEREXIST	/;"	d
EC_FS_E_USERNOTON	fs_errors.h	/^#define EC_FS_E_USERNOTON	/;"	d
EC_FS_E_WHOAREYOU	fs_errors.h	/^#define EC_FS_E_WHOAREYOU	/;"	d
EC_FS_E_WRONGPW	fs_errors.h	/^#define EC_FS_E_WRONGPW	/;"	d
EC_FS_FLAG_EOF	fs_proto.h	/^#define EC_FS_FLAG_EOF /;"	d
EC_FS_FLAG_LAST	fs_proto.h	/^#define EC_FS_FLAG_LAST /;"	d
EC_FS_FUNC_CAT_HEADER	fs_proto.h	/^#define EC_FS_FUNC_CAT_HEADER	/;"	d
EC_FS_FUNC_CDIRN	fs_proto.h	/^#define EC_FS_FUNC_CDIRN	/;"	d
EC_FS_FUNC_CLI	fs_proto.h	/^#define EC_FS_FUNC_CLI /;"	d
EC_FS_FUNC_CLOSE	fs_proto.h	/^#define EC_FS_FUNC_CLOSE	/;"	d
EC_FS_FUNC_COPY_DATA	fs_proto.h	/^#define EC_FS_FUNC_COPY_DATA	/;"	d
EC_FS_FUNC_CREATE	fs_proto.h	/^#define EC_FS_FUNC_CREATE	/;"	d
EC_FS_FUNC_DELETE	fs_proto.h	/^#define EC_FS_FUNC_DELETE	/;"	d
EC_FS_FUNC_EXAMINE	fs_proto.h	/^#define EC_FS_FUNC_EXAMINE	/;"	d
EC_FS_FUNC_GETBYTE	fs_proto.h	/^#define EC_FS_FUNC_GETBYTE	/;"	d
EC_FS_FUNC_GETBYTES	fs_proto.h	/^#define EC_FS_FUNC_GETBYTES	/;"	d
EC_FS_FUNC_GET_ARGS	fs_proto.h	/^#define EC_FS_FUNC_GET_ARGS	/;"	d
EC_FS_FUNC_GET_DISCS	fs_proto.h	/^#define EC_FS_FUNC_GET_DISCS	/;"	d
EC_FS_FUNC_GET_DISC_FREE	fs_proto.h	/^#define EC_FS_FUNC_GET_DISC_FREE	/;"	d
EC_FS_FUNC_GET_EOF	fs_proto.h	/^#define EC_FS_FUNC_GET_EOF	/;"	d
EC_FS_FUNC_GET_INFO	fs_proto.h	/^#define EC_FS_FUNC_GET_INFO	/;"	d
EC_FS_FUNC_GET_TIME	fs_proto.h	/^#define EC_FS_FUNC_GET_TIME	/;"	d
EC_FS_FUNC_GET_UENV	fs_proto.h	/^#define EC_FS_FUNC_GET_UENV	/;"	d
EC_FS_FUNC_GET_USER	fs_proto.h	/^#define EC_FS_FUNC_GET_USER	/;"	d
EC_FS_FUNC_GET_USERS_ON	fs_proto.h	/^#define EC_FS_FUNC_GET_USERS_ON	/;"	d
EC_FS_FUNC_GET_USER_FREE	fs_proto.h	/^#define EC_FS_FUNC_GET_USER_FREE /;"	d
EC_FS_FUNC_GET_VERSION	fs_proto.h	/^#define EC_FS_FUNC_GET_VERSION	/;"	d
EC_FS_FUNC_LOAD	fs_proto.h	/^#define EC_FS_FUNC_LOAD	/;"	d
EC_FS_FUNC_LOAD_COMMAND	fs_proto.h	/^#define EC_FS_FUNC_LOAD_COMMAND	/;"	d
EC_FS_FUNC_LOGOFF	fs_proto.h	/^#define EC_FS_FUNC_LOGOFF	/;"	d
EC_FS_FUNC_OPEN	fs_proto.h	/^#define EC_FS_FUNC_OPEN	/;"	d
EC_FS_FUNC_PUTBYTE	fs_proto.h	/^#define EC_FS_FUNC_PUTBYTE	/;"	d
EC_FS_FUNC_PUTBYTES	fs_proto.h	/^#define EC_FS_FUNC_PUTBYTES	/;"	d
EC_FS_FUNC_SAVE	fs_proto.h	/^#define EC_FS_FUNC_SAVE	/;"	d
EC_FS_FUNC_SET_ARGS	fs_proto.h	/^#define EC_FS_FUNC_SET_ARGS	/;"	d
EC_FS_FUNC_SET_INFO	fs_proto.h	/^#define EC_FS_FUNC_SET_INFO	/;"	d
EC_FS_FUNC_SET_OPT4	fs_proto.h	/^#define EC_FS_FUNC_SET_OPT4	/;"	d
EC_FS_FUNC_SET_TIME	fs_proto.h	/^#define EC_FS_FUNC_SET_TIME	/;"	d
EC_FS_FUNC_SET_USER_FREE	fs_proto.h	/^#define EC_FS_FUNC_SET_USER_FREE /;"	d
EC_FS_FUNC_USERS_EXT	fs_proto.h	/^#define EC_FS_FUNC_USERS_EXT	/;"	d
EC_FS_FUNC_USER_INFO_EXT	fs_proto.h	/^#define EC_FS_FUNC_USER_INFO_EXT /;"	d
EC_FS_FUNC_WHO_AM_I	fs_proto.h	/^#define EC_FS_FUNC_WHO_AM_I	/;"	d
EC_FS_GET_INFO_ACCESS	fs_proto.h	/^#define EC_FS_GET_INFO_ACCESS /;"	d
EC_FS_GET_INFO_ALL	fs_proto.h	/^#define EC_FS_GET_INFO_ALL	/;"	d
EC_FS_GET_INFO_CTIME	fs_proto.h	/^#define EC_FS_GET_INFO_CTIME	/;"	d
EC_FS_GET_INFO_DIR	fs_proto.h	/^#define EC_FS_GET_INFO_DIR	/;"	d
EC_FS_GET_INFO_META	fs_proto.h	/^#define EC_FS_GET_INFO_META	/;"	d
EC_FS_GET_INFO_SIZE	fs_proto.h	/^#define EC_FS_GET_INFO_SIZE	/;"	d
EC_FS_GET_INFO_UID	fs_proto.h	/^#define EC_FS_GET_INFO_UID	/;"	d
EC_FS_OPT4_EXEC	fs_proto.h	/^#define EC_FS_OPT4_EXEC	/;"	d
EC_FS_OPT4_LOAD	fs_proto.h	/^#define EC_FS_OPT4_LOAD	/;"	d
EC_FS_OPT4_NONE	fs_proto.h	/^#define EC_FS_OPT4_NONE	/;"	d
EC_FS_OPT4_RUN	fs_proto.h	/^#define EC_FS_OPT4_RUN	/;"	d
EC_FS_PRIV_FIXED	fs_proto.h	/^#define EC_FS_PRIV_FIXED /;"	d
EC_FS_PRIV_LIMIT	fs_proto.h	/^#define EC_FS_PRIV_LIMIT /;"	d
EC_FS_PRIV_NONE	fs_proto.h	/^#define EC_FS_PRIV_NONE /;"	d
EC_FS_PRIV_SYST	fs_proto.h	/^#define EC_FS_PRIV_SYST /;"	d
EC_FS_RC_OK	fs_proto.h	/^#define EC_FS_RC_OK /;"	d
EC_FS_SET_INFO_ACCESS	fs_proto.h	/^#define EC_FS_SET_INFO_ACCESS	/;"	d
EC_FS_SET_INFO_ALL	fs_proto.h	/^#define EC_FS_SET_INFO_ALL	/;"	d
EC_FS_SET_INFO_EXEC	fs_proto.h	/^#define EC_FS_SET_INFO_EXEC	/;"	d
EC_FS_SET_INFO_LOAD	fs_proto.h	/^#define EC_FS_SET_INFO_LOAD	/;"	d
EC_FS_TYPE_DIR	fs_proto.h	/^#define EC_FS_TYPE_DIR	/;"	d
EC_FS_TYPE_FILE	fs_proto.h	/^#define EC_FS_TYPE_FILE	/;"	d
EC_FS_TYPE_NONE	fs_proto.h	/^#define EC_FS_TYPE_NONE	/;"	d
EC_FS_TYPE_SOME	fs_proto.h	/^#define EC_FS_TYPE_SOME	/;"	d
EC_PORT_FS	aun.h	/^#define EC_PORT_FS /;"	d
EC_PORT_FS	aund.c	/^#define EC_PORT_FS /;"	d	file:
EC_PORT_PS_JOB	aun.h	/^#define EC_PORT_PS_JOB	/;"	d
EC_PORT_PS_STATUS_ENQ	aun.h	/^#define EC_PORT_PS_STATUS_ENQ /;"	d
EC_PORT_PS_STATUS_REPLY	aun.h	/^#define EC_PORT_PS_STATUS_REPLY /;"	d
EGREP	makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
EOB_ACT_CONTINUE_SCAN	conf_lex.c	/^#define EOB_ACT_CONTINUE_SCAN /;"	d	file:
EOB_ACT_END_OF_FILE	conf_lex.c	/^#define EOB_ACT_END_OF_FILE /;"	d	file:
EOB_ACT_LAST_MATCH	conf_lex.c	/^#define EOB_ACT_LAST_MATCH /;"	d	file:
ETAGS	makefile	/^ETAGS = etags$/;"	m
EXEEXT	makefile	/^EXEEXT = $/;"	m
EXTRA_DIST	makefile	/^EXTRA_DIST = contrib aund.conf.example $(man_MANS)$/;"	m
FLEXINT_H	conf_lex.c	/^#define FLEXINT_H$/;"	d	file:
FLEX_BETA	conf_lex.c	/^#define FLEX_BETA$/;"	d	file:
FLEX_SCANNER	conf_lex.c	/^#define FLEX_SCANNER$/;"	d	file:
FS_DIR_ACCESS_OWNER	fs_proto.h	/^#define FS_DIR_ACCESS_OWNER	/;"	d
FS_DIR_ACCESS_PUBLIC	fs_proto.h	/^#define FS_DIR_ACCESS_PUBLIC	/;"	d
FS_HANDLE_DIR	fileserver.h	/^enum fs_handle_type { FS_HANDLE_FILE, FS_HANDLE_DIR };$/;"	e	enum:fs_handle_type
FS_HANDLE_FILE	fileserver.h	/^enum fs_handle_type { FS_HANDLE_FILE, FS_HANDLE_DIR };$/;"	e	enum:fs_handle_type
FS_INFO_RISCOS	fileserver.h	/^extern enum fs_info_format { FS_INFO_RISCOS, FS_INFO_SJ } default_infoformat;$/;"	e	enum:fs_info_format
FS_INFO_SJ	fileserver.h	/^extern enum fs_info_format { FS_INFO_RISCOS, FS_INFO_SJ } default_infoformat;$/;"	e	enum:fs_info_format
FS_MAP_DEFAULT	fs_filetype.c	/^enum fs_map_kind { FS_MAP_DEFAULT, FS_MAP_MODE, FS_MAP_NAME };$/;"	e	enum:fs_map_kind	file:
FS_MAP_MODE	fs_filetype.c	/^enum fs_map_kind { FS_MAP_DEFAULT, FS_MAP_MODE, FS_MAP_NAME };$/;"	e	enum:fs_map_kind	file:
FS_MAP_NAME	fs_filetype.c	/^enum fs_map_kind { FS_MAP_DEFAULT, FS_MAP_MODE, FS_MAP_NAME };$/;"	e	enum:fs_map_kind	file:
FT_DATA	fs_filetype.c	/^#define FT_DATA	/;"	d	file:
FT_DEVICE	fs_filetype.c	/^#define FT_DEVICE	/;"	d	file:
FT_SOFTLINK	fs_filetype.c	/^#define FT_SOFTLINK	/;"	d	file:
FT_TEXT	fs_filetype.c	/^#define FT_TEXT	/;"	d	file:
FT_UNIXEX	fs_filetype.c	/^#define FT_UNIXEX	/;"	d	file:
GCCFEWERWARNINGS	makefile	/^GCCFEWERWARNINGS = $(GCCWARNINGS) -Wno-old-style-definition -Wno-redundant-decls -Wno-unused$/;"	m
GCCWARNINGS	makefile	/^GCCWARNINGS = -Wall -Wdeclaration-after-statement -Wold-style-definition -Wmissing-prototypes -Wredundant-decls -Wno-pointer-sign -Wno-uninitialized$/;"	m
GREP	makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GZIP_ENV	makefile	/^GZIP_ENV = --best$/;"	m
HAVE_INTTYPES_H	config.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_MEMORY_H	config.h	/^#define HAVE_MEMORY_H /;"	d
HAVE_O_xxLOCK	fs_fileio.c	/^#define HAVE_O_xxLOCK$/;"	d	file:
HAVE_STDINT_H	config.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDLIB_H	config.h	/^#define HAVE_STDLIB_H /;"	d
HAVE_STRINGS_H	config.h	/^#define HAVE_STRINGS_H /;"	d
HAVE_STRING_H	config.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRUCT_STAT_ST_BIRTHTIME	config.h	/^#define HAVE_STRUCT_STAT_ST_BIRTHTIME /;"	d
HAVE_SYS_STAT_H	config.h	/^#define HAVE_SYS_STAT_H /;"	d
HAVE_SYS_TYPES_H	config.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_UNISTD_H	config.h	/^#define HAVE_UNISTD_H /;"	d
INITIAL	conf_lex.c	/^#define INITIAL /;"	d	file:
INSTALL	makefile	/^INSTALL = \/usr\/local\/bin\/ginstall -c$/;"	m
INSTALL_DATA	makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INT16_MAX	conf_lex.c	/^#define INT16_MAX /;"	d	file:
INT16_MIN	conf_lex.c	/^#define INT16_MIN /;"	d	file:
INT32_MAX	conf_lex.c	/^#define INT32_MAX /;"	d	file:
INT32_MIN	conf_lex.c	/^#define INT32_MIN /;"	d	file:
INT8_MAX	conf_lex.c	/^#define INT8_MAX /;"	d	file:
INT8_MIN	conf_lex.c	/^#define INT8_MIN /;"	d	file:
LDFLAGS	makefile	/^LDFLAGS = $/;"	m
LEX	makefile	/^LEX = flex$/;"	m
LEXCOMPILE	makefile	/^LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)$/;"	m
LEXLIB	makefile	/^LEXLIB = -ll$/;"	m
LEX_OUTPUT_ROOT	makefile	/^LEX_OUTPUT_ROOT = lex.yy$/;"	m
LIBOBJS	makefile	/^LIBOBJS = $/;"	m
LIBRARIES	makefile	/^LIBRARIES = $(noinst_LIBRARIES)$/;"	m
LIBS	makefile	/^LIBS = $/;"	m
LINK	makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LTLIBOBJS	makefile	/^LTLIBOBJS = $/;"	m
MAKEINFO	makefile	/^MAKEINFO = makeinfo$/;"	m
MANS	makefile	/^MANS = $(man_MANS)$/;"	m
MAX_HANDLES	fs_handle.c	/^#define MAX_HANDLES /;"	d	file:
MKDIR_P	makefile	/^MKDIR_P = \/usr\/local\/bin\/gmkdir -p$/;"	m
NCMDS	fs_cli.c	/^#define NCMDS /;"	d	file:
NERRNOS	fs_error.c	/^#define NERRNOS /;"	d	file:
NFUNC	fileserver.c	/^#define NFUNC /;"	d	file:
NMSGS	fs_error.c	/^#define NMSGS /;"	d	file:
NORMAL_INSTALL	makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	makefile	/^NORMAL_UNINSTALL = :$/;"	m
NROFF	makefile	/^NROFF = nroff$/;"	m
OBJEXT	makefile	/^OBJEXT = o$/;"	m
OUR_DATA_PORT	fs_fileio.c	/^#define OUR_DATA_PORT /;"	d	file:
PACKAGE	config.h	/^#define PACKAGE /;"	d
PACKAGE	makefile	/^PACKAGE = aund$/;"	m
PACKAGE_BUGREPORT	config.h	/^#define PACKAGE_BUGREPORT /;"	d
PACKAGE_BUGREPORT	makefile	/^PACKAGE_BUGREPORT = bjh21@bjh21.me.uk$/;"	m
PACKAGE_NAME	config.h	/^#define PACKAGE_NAME /;"	d
PACKAGE_NAME	makefile	/^PACKAGE_NAME = aund$/;"	m
PACKAGE_STRING	config.h	/^#define PACKAGE_STRING /;"	d
PACKAGE_STRING	makefile	/^PACKAGE_STRING = aund 0.06$/;"	m
PACKAGE_TARNAME	config.h	/^#define PACKAGE_TARNAME /;"	d
PACKAGE_TARNAME	makefile	/^PACKAGE_TARNAME = aund$/;"	m
PACKAGE_URL	config.h	/^#define PACKAGE_URL /;"	d
PACKAGE_URL	makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	config.h	/^#define PACKAGE_VERSION /;"	d
PACKAGE_VERSION	makefile	/^PACKAGE_VERSION = 0.06$/;"	m
PATH_SEPARATOR	makefile	/^PATH_SEPARATOR = :$/;"	m
PKTOFF	beebem.c	/^#define PKTOFF /;"	d	file:
PORT_AUN	aun.h	/^#define PORT_AUN /;"	d
POST_INSTALL	makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	makefile	/^PRE_UNINSTALL = :$/;"	m
PROGRAMS	makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
RANLIB	makefile	/^RANLIB = ranlib$/;"	m
REJECT	conf_lex.c	/^#define REJECT /;"	d	file:
SET_MAKE	makefile	/^SET_MAKE = $/;"	m
SHELL	makefile	/^SHELL = \/bin\/sh$/;"	m
SIZEOF_ec_fs_reply_discs	fs_proto.h	/^#define SIZEOF_ec_fs_reply_discs(/;"	d
SIZEOF_ec_fs_reply_examine_all	fs_proto.h	/^#define SIZEOF_ec_fs_reply_examine_all(/;"	d
SOURCES	makefile	/^SOURCES = $(libconf_lex_a_SOURCES) $(aund_SOURCES)$/;"	m
STDC_HEADERS	config.h	/^#define STDC_HEADERS /;"	d
STRIP	makefile	/^STRIP = $/;"	m
S_IFBLK	conf_lex.c	/^#define S_IFBLK /;"	d	file:
S_IFCHR	conf_lex.c	/^#define S_IFCHR /;"	d	file:
S_IFDIR	conf_lex.c	/^#define S_IFDIR /;"	d	file:
S_IFIFO	conf_lex.c	/^#define S_IFIFO /;"	d	file:
S_IFLNK	conf_lex.c	/^#define S_IFLNK /;"	d	file:
S_IFREG	conf_lex.c	/^#define S_IFREG /;"	d	file:
S_IFSOCK	conf_lex.c	/^#define S_IFSOCK /;"	d	file:
S_IFWHT	conf_lex.c	/^#define S_IFWHT /;"	d	file:
TYPEMAP	conf_lex.c	/^#define TYPEMAP /;"	d	file:
TYPEMAP_TYPE	conf_lex.c	/^#define TYPEMAP_TYPE /;"	d	file:
UINT16_MAX	conf_lex.c	/^#define UINT16_MAX /;"	d	file:
UINT32_MAX	conf_lex.c	/^#define UINT32_MAX /;"	d	file:
UINT8_MAX	conf_lex.c	/^#define UINT8_MAX /;"	d	file:
VERSION	config.h	/^#define VERSION /;"	d
VERSION	makefile	/^VERSION = 0.06$/;"	m
YLWRAP	makefile	/^YLWRAP = $(top_srcdir)\/ylwrap$/;"	m
YYSTATE	conf_lex.c	/^#define YYSTATE /;"	d	file:
YYTABLES_NAME	conf_lex.c	/^#define YYTABLES_NAME /;"	d	file:
YYTEXT_POINTER	config.h	/^#define YYTEXT_POINTER /;"	d
YY_AT_BOL	conf_lex.c	/^#define YY_AT_BOL(/;"	d	file:
YY_BREAK	conf_lex.c	/^#define YY_BREAK /;"	d	file:
YY_BUFFER_EOF_PENDING	conf_lex.c	/^#define YY_BUFFER_EOF_PENDING /;"	d	file:
YY_BUFFER_NEW	conf_lex.c	/^#define YY_BUFFER_NEW /;"	d	file:
YY_BUFFER_NORMAL	conf_lex.c	/^#define YY_BUFFER_NORMAL /;"	d	file:
YY_BUFFER_STATE	conf_lex.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	conf_lex.c	/^#define YY_BUF_SIZE /;"	d	file:
YY_CHAR	conf_lex.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	conf_lex.c	/^#define YY_CURRENT_BUFFER /;"	d	file:
YY_CURRENT_BUFFER_LVALUE	conf_lex.c	/^#define YY_CURRENT_BUFFER_LVALUE /;"	d	file:
YY_DECL	conf_lex.c	/^#define YY_DECL /;"	d	file:
YY_DECL_IS_OURS	conf_lex.c	/^#define YY_DECL_IS_OURS /;"	d	file:
YY_DO_BEFORE_ACTION	conf_lex.c	/^#define YY_DO_BEFORE_ACTION /;"	d	file:
YY_END_OF_BUFFER	conf_lex.c	/^#define YY_END_OF_BUFFER /;"	d	file:
YY_END_OF_BUFFER_CHAR	conf_lex.c	/^#define YY_END_OF_BUFFER_CHAR /;"	d	file:
YY_EXIT_FAILURE	conf_lex.c	/^#define YY_EXIT_FAILURE /;"	d	file:
YY_EXTRA_TYPE	conf_lex.c	/^#define YY_EXTRA_TYPE /;"	d	file:
YY_FATAL_ERROR	conf_lex.c	/^#define YY_FATAL_ERROR(/;"	d	file:
YY_FLEX_MAJOR_VERSION	conf_lex.c	/^#define YY_FLEX_MAJOR_VERSION /;"	d	file:
YY_FLEX_MINOR_VERSION	conf_lex.c	/^#define YY_FLEX_MINOR_VERSION /;"	d	file:
YY_FLEX_SUBMINOR_VERSION	conf_lex.c	/^#define YY_FLEX_SUBMINOR_VERSION /;"	d	file:
YY_FLUSH_BUFFER	conf_lex.c	/^#define YY_FLUSH_BUFFER /;"	d	file:
YY_INPUT	conf_lex.c	/^#define YY_INPUT(/;"	d	file:
YY_INT_ALIGNED	conf_lex.c	/^#define  YY_INT_ALIGNED /;"	d	file:
YY_LESS_LINENO	conf_lex.c	/^    #define YY_LESS_LINENO(/;"	d	file:
YY_MORE_ADJ	conf_lex.c	/^#define YY_MORE_ADJ /;"	d	file:
YY_NEW_FILE	conf_lex.c	/^#define YY_NEW_FILE /;"	d	file:
YY_NULL	conf_lex.c	/^#define YY_NULL /;"	d	file:
YY_NUM_RULES	conf_lex.c	/^#define YY_NUM_RULES /;"	d	file:
YY_READ_BUF_SIZE	conf_lex.c	/^#define YY_READ_BUF_SIZE /;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	conf_lex.c	/^#define YY_RESTORE_YY_MORE_OFFSET$/;"	d	file:
YY_RULE_SETUP	conf_lex.c	/^#define YY_RULE_SETUP /;"	d	file:
YY_SC_TO_UI	conf_lex.c	/^#define YY_SC_TO_UI(/;"	d	file:
YY_SKIP_YYWRAP	conf_lex.c	/^#define YY_SKIP_YYWRAP$/;"	d	file:
YY_START	conf_lex.c	/^#define YY_START /;"	d	file:
YY_START_STACK_INCR	conf_lex.c	/^#define YY_START_STACK_INCR /;"	d	file:
YY_STATE_BUF_SIZE	conf_lex.c	/^#define YY_STATE_BUF_SIZE /;"	d	file:
YY_STATE_EOF	conf_lex.c	/^#define YY_STATE_EOF(/;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	conf_lex.c	/^#define YY_STRUCT_YY_BUFFER_STATE$/;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	conf_lex.c	/^#define YY_TYPEDEF_YY_BUFFER_STATE$/;"	d	file:
YY_TYPEDEF_YY_SIZE_T	conf_lex.c	/^#define YY_TYPEDEF_YY_SIZE_T$/;"	d	file:
YY_USER_ACTION	conf_lex.c	/^#define YY_USER_ACTION$/;"	d	file:
YY_USE_CONST	conf_lex.c	/^#define YY_USE_CONST$/;"	d	file:
_AUN_H	aun.h	/^#define _AUN_H$/;"	d
_FILESERVER_H	fileserver.h	/^#define _FILESERVER_H$/;"	d
_FS_ERRORS_H	fs_errors.h	/^#define _FS_ERRORS_H$/;"	d
_FS_PROTO_H	fs_proto.h	/^#define _FS_PROTO_H$/;"	d
__STDC_LIMIT_MACROS	conf_lex.c	/^#define __STDC_LIMIT_MACROS /;"	d	file:
abs_builddir	makefile	/^abs_builddir = \/Users\/steveinglis\/documents\/aund$/;"	m
abs_srcdir	makefile	/^abs_srcdir = \/Users\/steveinglis\/documents\/aund$/;"	m
abs_top_builddir	makefile	/^abs_top_builddir = \/Users\/steveinglis\/documents\/aund$/;"	m
abs_top_srcdir	makefile	/^abs_top_srcdir = \/Users\/steveinglis\/documents\/aund$/;"	m
ac_ct_CC	makefile	/^ac_ct_CC = gcc$/;"	m
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_member	configure	/^ac_fn_c_check_member ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
access	fs_proto.h	/^	uint8_t access;$/;"	m	struct:ec_fs_exall
access	fs_proto.h	/^	uint8_t access;$/;"	m	struct:ec_fs_reply_create
access	fs_proto.h	/^	uint8_t access;$/;"	m	struct:ec_fs_reply_info_access
access	fs_proto.h	/^	uint8_t access;$/;"	m	struct:ec_fs_reply_info_all
access	fs_proto.h	/^	uint8_t access;$/;"	m	struct:ec_fs_reply_load1
access	fs_proto.h	/^	uint8_t access;$/;"	m	struct:ec_fs_reply_save2
access	fs_proto.h	/^	uint8_t access;$/;"	m	struct:ec_fs_req_set_info_access
access	fs_proto.h	/^	uint8_t access;$/;"	m	struct:ec_fs_req_set_info_all
addr	beebem.c	/^	struct in_addr addr;$/;"	m	struct:ipport	typeref:struct:ipport::in_addr	file:
am__CONFIG_DISTCLEAN_FILES	makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DIST_COMMON	makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/config.h.in INSTALL \\$/;"	m
am__aclocal_m4_deps	makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__base_list	makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_remade	makefile	/^am__depfiles_remade = .\/$(DEPDIR)\/aun.Po .\/$(DEPDIR)\/aund.Po \\$/;"	m
am__distuninstallcheck_listfiles	makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__include	makefile	/^am__include = include$/;"	m
am__install_max	makefile	/^am__install_max = 40$/;"	m
am__installdirs	makefile	/^am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man5dir)" \\$/;"	m
am__is_gnu_make	makefile	/^am__is_gnu_make = { \\$/;"	m
am__leading_dot	makefile	/^am__leading_dot = .$/;"	m
am__make_dryrun	makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	makefile	/^am__make_running_with_option = \\$/;"	m
am__maybe_remake_depfiles	makefile	/^am__maybe_remake_depfiles = depfiles$/;"	m
am__mv	makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	makefile	/^am__nobase_strip_setup = \\$/;"	m
am__post_remove_distdir	makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	makefile	/^am__quote = $/;"	m
am__remove_distdir	makefile	/^am__remove_distdir = \\$/;"	m
am__strip_dir	makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP) \\$/;"	m
am__tar	makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__uninstall_files_from_dir	makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_AR_	makefile	/^am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_AR_0	makefile	/^am__v_AR_0 = @echo "  AR      " $@;$/;"	m
am__v_AR_1	makefile	/^am__v_AR_1 = $/;"	m
am__v_CCLD_	makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	makefile	/^am__v_CC_1 = $/;"	m
am__v_GEN_	makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	makefile	/^am__v_GEN_1 = $/;"	m
am__v_LEX_	makefile	/^am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_LEX_0	makefile	/^am__v_LEX_0 = @echo "  LEX     " $@;$/;"	m
am__v_LEX_1	makefile	/^am__v_LEX_1 = $/;"	m
am__v_P_	makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_aund_OBJECTS	makefile	/^am_aund_OBJECTS = aund.$(OBJEXT) fileserver.$(OBJEXT) fs_cli.$(OBJEXT) \\$/;"	m
am_libconf_lex_a_OBJECTS	makefile	/^am_libconf_lex_a_OBJECTS = libconf_lex_a-conf_lex.$(OBJEXT)$/;"	m
arg	fs_proto.h	/^	uint8_t arg;$/;"	m	struct:ec_fs_req_examine
arg	fs_proto.h	/^	uint8_t arg;$/;"	m	struct:ec_fs_req_get_args
arg	fs_proto.h	/^	uint8_t arg;$/;"	m	struct:ec_fs_req_get_info
arg	fs_proto.h	/^	uint8_t arg;$/;"	m	struct:ec_fs_req_set_args
arg	fs_proto.h	/^	uint8_t arg;$/;"	m	struct:ec_fs_req_set_info
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
at_eof	fs_fileio.c	/^at_eof(int fd)$/;"	f	file:
aun	aun.c	/^const struct aun_funcs aun = {$/;"	v	typeref:struct:aun_funcs
aun	fs_proto.h	/^	struct aun_packet aun;$/;"	m	struct:ec_fs_reply	typeref:struct:ec_fs_reply::aun_packet
aun	fs_proto.h	/^	struct aun_packet aun;$/;"	m	struct:ec_fs_req	typeref:struct:ec_fs_req::aun_packet
aun_ack	aun.c	/^aun_ack(int sock, struct aun_packet *pkt, struct sockaddr_in *from, int type)$/;"	f	file:
aun_funcs	extern.h	/^struct aun_funcs {$/;"	s
aun_get_stn	aun.c	/^aun_get_stn(struct aun_srcaddr *vfrom, uint8_t *out)$/;"	f	file:
aun_ntoa	aun.c	/^aun_ntoa(struct aun_srcaddr *vfrom)$/;"	f	file:
aun_packet	aun.h	/^struct aun_packet {$/;"	s
aun_recv	aun.c	/^aun_recv(ssize_t *outsize, struct aun_srcaddr *vfrom, int want_port)$/;"	f	file:
aun_setup	aun.c	/^aun_setup(void)$/;"	f	file:
aun_srcaddr	extern.h	/^struct aun_srcaddr {$/;"	s
aun_xmit	aun.c	/^aun_xmit(struct aun_packet *pkt, size_t len, struct aun_srcaddr *vto)$/;"	f	file:
aund_DEPENDENCIES	makefile	/^aund_DEPENDENCIES = libconf_lex.a $(LIBOBJS)$/;"	m
aund_LDADD	makefile	/^aund_LDADD = libconf_lex.a $(LIBOBJS)$/;"	m
aund_OBJECTS	makefile	/^aund_OBJECTS = $(am_aund_OBJECTS)$/;"	m
aund_SOURCES	makefile	/^aund_SOURCES = extern.h aund.c \\$/;"	m
aunfuncs	aund.c	/^const struct aun_funcs *aunfuncs = &aun;$/;"	v	typeref:struct:aun_funcs
beebem	beebem.c	/^const struct aun_funcs beebem = {$/;"	v	typeref:struct:aun_funcs
beebem_cfg_file	aund.c	/^char *beebem_cfg_file = NULL;$/;"	v
beebem_get_stn	beebem.c	/^beebem_get_stn(struct aun_srcaddr *vfrom, uint8_t *out)$/;"	f	file:
beebem_ingress	beebem.c	/^int beebem_ingress = 0;		       \/* set by conf_lex.l *\/$/;"	v
beebem_listen	beebem.c	/^static ssize_t beebem_listen(unsigned *addr, int forever)$/;"	f	file:
beebem_ntoa	beebem.c	/^beebem_ntoa(struct aun_srcaddr *vfrom)$/;"	f	file:
beebem_recv	beebem.c	/^beebem_recv(ssize_t *outsize, struct aun_srcaddr *vfrom, int want_port)$/;"	f	file:
beebem_send	beebem.c	/^static void beebem_send(const void *data, ssize_t len)$/;"	f	file:
beebem_setup	beebem.c	/^beebem_setup(void)$/;"	f	file:
beebem_xmit	beebem.c	/^beebem_xmit(struct aun_packet *spkt, size_t len, struct aun_srcaddr *vto)$/;"	f	file:
bin_PROGRAMS	makefile	/^bin_PROGRAMS = aund$(EXEEXT)$/;"	m
bindir	makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
block_size	fs_proto.h	/^	uint8_t block_size[2];$/;"	m	struct:ec_fs_reply_putbytes1
block_size	fs_proto.h	/^	uint8_t block_size[2];$/;"	m	struct:ec_fs_reply_save1
boolean	conf_lex.c	/^	int boolean;$/;"	m	union:cfything	file:
buf	aun.c	/^unsigned char buf[65536];$/;"	v
build_alias	makefile	/^build_alias = $/;"	m
builddir	makefile	/^builddir = .$/;"	m
byte	fs_proto.h	/^	uint8_t byte;$/;"	m	struct:ec_fs_reply_getbyte
byte	fs_proto.h	/^	uint8_t byte;$/;"	m	struct:ec_fs_req_putbyte
bytes	extern.h	/^	uint8_t bytes[4];$/;"	m	struct:aun_srcaddr
cfy_create_buffer	conf_lex.c	/^    YY_BUFFER_STATE cfy_create_buffer  (FILE * file, int  size )$/;"	f
cfy_delete_buffer	conf_lex.c	/^    void cfy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
cfy_flex_debug	conf_lex.c	/^int cfy_flex_debug = 0;$/;"	v
cfy_flush_buffer	conf_lex.c	/^    void cfy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
cfy_init_buffer	conf_lex.c	/^    static void cfy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
cfy_line	conf_lex.c	/^static int cfy_line;$/;"	v	file:
cfy_load_buffer_state	conf_lex.c	/^static void cfy_load_buffer_state  (void)$/;"	f	file:
cfy_scan_buffer	conf_lex.c	/^YY_BUFFER_STATE cfy_scan_buffer  (char * base, yy_size_t  size )$/;"	f
cfy_scan_bytes	conf_lex.c	/^YY_BUFFER_STATE cfy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )$/;"	f
cfy_scan_string	conf_lex.c	/^YY_BUFFER_STATE cfy_scan_string (yyconst char * yystr )$/;"	f
cfy_switch_to_buffer	conf_lex.c	/^    void cfy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f
cfyalloc	conf_lex.c	/^void *cfyalloc (yy_size_t  size )$/;"	f
cfyensure_buffer_stack	conf_lex.c	/^static void cfyensure_buffer_stack (void)$/;"	f	file:
cfyfree	conf_lex.c	/^void cfyfree (void * ptr )$/;"	f
cfyget_debug	conf_lex.c	/^int cfyget_debug  (void)$/;"	f
cfyget_in	conf_lex.c	/^FILE *cfyget_in  (void)$/;"	f
cfyget_leng	conf_lex.c	/^yy_size_t cfyget_leng  (void)$/;"	f
cfyget_lineno	conf_lex.c	/^int cfyget_lineno  (void)$/;"	f
cfyget_out	conf_lex.c	/^FILE *cfyget_out  (void)$/;"	f
cfyget_text	conf_lex.c	/^char *cfyget_text  (void)$/;"	f
cfyin	conf_lex.c	/^FILE *cfyin = (FILE *) 0, *cfyout = (FILE *) 0;$/;"	v
cfyleng	conf_lex.c	/^yy_size_t cfyleng;$/;"	v
cfylex_destroy	conf_lex.c	/^int cfylex_destroy  (void)$/;"	f
cfylineno	conf_lex.c	/^int cfylineno = 1;$/;"	v
cfyout	conf_lex.c	/^FILE *cfyin = (FILE *) 0, *cfyout = (FILE *) 0;$/;"	v
cfypop_buffer_state	conf_lex.c	/^void cfypop_buffer_state (void)$/;"	f
cfypush_buffer_state	conf_lex.c	/^void cfypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
cfyrealloc	conf_lex.c	/^void *cfyrealloc  (void * ptr, yy_size_t  size )$/;"	f
cfyrestart	conf_lex.c	/^    void cfyrestart  (FILE * input_file )$/;"	f
cfyset_debug	conf_lex.c	/^void cfyset_debug (int  bdebug )$/;"	f
cfyset_in	conf_lex.c	/^void cfyset_in (FILE *  in_str )$/;"	f
cfyset_lineno	conf_lex.c	/^void cfyset_lineno (int  line_number )$/;"	f
cfyset_out	conf_lex.c	/^void cfyset_out (FILE *  out_str )$/;"	f
cfytext	conf_lex.c	/^char *cfytext;$/;"	v
cfything	conf_lex.c	/^union cfything {$/;"	u	file:
cfywrap	conf_lex.c	/^#define cfywrap(/;"	d	file:
change	fileserver.h	/^	int (*change)(char const *, char const *, char const *);$/;"	m	struct:user_funcs
client	fileserver.h	/^	struct fs_client *client;	\/* Pointer to client structure, or NULL if not logged in *\/$/;"	m	struct:fs_context	typeref:struct:fs_context::fs_client
cmd_tab	fs_cli.c	/^static const struct fs_cmd cmd_tab[] = {$/;"	v	typeref:struct:fs_cmd	file:
command_code	fs_proto.h	/^	uint8_t command_code;$/;"	m	struct:ec_fs_reply
conf_cmd_beebem	conf_lex.c	/^conf_cmd_beebem(union cfything *thing)$/;"	f	file:
conf_cmd_debug	conf_lex.c	/^conf_cmd_debug(union cfything *xthing)$/;"	f	file:
conf_cmd_infofmt	conf_lex.c	/^conf_cmd_infofmt(union cfything *thing)$/;"	f	file:
conf_cmd_lib	conf_lex.c	/^conf_cmd_lib(union cfything *thing)$/;"	f	file:
conf_cmd_opt4	conf_lex.c	/^conf_cmd_opt4(union cfything *thing)$/;"	f	file:
conf_cmd_pwfile	conf_lex.c	/^conf_cmd_pwfile(union cfything *thing)$/;"	f	file:
conf_cmd_root	conf_lex.c	/^conf_cmd_root(union cfything *thing)$/;"	f	file:
conf_cmd_safehandles	conf_lex.c	/^conf_cmd_safehandles(union cfything *xthing)$/;"	f	file:
conf_cmd_syslog	conf_lex.c	/^conf_cmd_syslog(union cfything *xthing)$/;"	f	file:
conf_cmd_timeout	conf_lex.c	/^conf_cmd_timeout(union cfything *thing)$/;"	f	file:
conf_cmd_typemap_default	conf_lex.c	/^conf_cmd_typemap_default(union cfything *thing)$/;"	f	file:
conf_cmd_typemap_name	conf_lex.c	/^conf_cmd_typemap_name(union cfything *thing)$/;"	f	file:
conf_cmd_typemap_perm	conf_lex.c	/^conf_cmd_typemap_perm(union cfything *thing)$/;"	f	file:
conf_cmd_typemap_type	conf_lex.c	/^conf_cmd_typemap_type(union cfything *thing)$/;"	f	file:
conf_cmd_urd	conf_lex.c	/^conf_cmd_urd(union cfything *thing)$/;"	f	file:
conf_init	conf_lex.c	/^conf_init(const char *path)$/;"	f
conf_read_file	conf_lex.c	/^conf_read_file(const char *path)$/;"	f	file:
cr80	fs_proto.h	/^	char cr80[2];		       \/* cr, 0x80 *\/$/;"	m	struct:ec_fs_reply_cat_header
crit	fs_filetype.c	/^	} crit;$/;"	m	struct:fs_typemap	typeref:union:fs_typemap::__anon1	file:
csd	fs_proto.h	/^	uint8_t csd;$/;"	m	struct:ec_fs_reply_logon
csd	fs_proto.h	/^	uint8_t csd;$/;"	m	struct:ec_fs_reply_sdisc
csd	fs_proto.h	/^	uint8_t csd;$/;"	m	struct:ec_fs_req
csd_discname	fs_proto.h	/^	char csd_discname[12];	       \/* zero-padded *\/$/;"	m	struct:ec_fs_reply_cat_header
csd_discname	fs_proto.h	/^	char csd_discname[16]; 	\/* Name of disc with CSD on *\/$/;"	m	struct:ec_fs_reply_get_uenv
csd_leafname	fs_proto.h	/^	char csd_leafname[10];	\/* Leaf name of CSD *\/$/;"	m	struct:ec_fs_reply_get_uenv
curpidfile	aund.c	/^static char const *curpidfile;$/;"	v	file:
cycle	fs_proto.h	/^	uint8_t cycle; \/* changes whenever dir changes *\/$/;"	m	struct:ec_fs_reply_info_dir
data	aun.h	/^	uint8_t data[0]; \/* actually more *\/$/;"	m	struct:aun_packet
data	fs_proto.h	/^	char data[0];$/;"	m	struct:ec_fs_reply_examine
data	fs_proto.h	/^	struct ec_fs_exall data[0];$/;"	m	struct:ec_fs_reply_examine_all	typeref:struct:ec_fs_reply_examine_all::ec_fs_exall
data	fs_proto.h	/^	struct ec_fs_exname data[0];$/;"	m	struct:ec_fs_reply_examine_name	typeref:struct:ec_fs_reply_examine_name::ec_fs_exname
data	fs_proto.h	/^	uint8_t data[0]; \/* more *\/$/;"	m	struct:ec_fs_reply
data	fs_proto.h	/^	uint8_t data[0]; \/* more *\/$/;"	m	struct:ec_fs_req
data	fs_proto.h	/^	uint8_t data[0];$/;"	m	struct:ec_fs_req_set_info
data_port	fs_proto.h	/^	uint8_t data_port;$/;"	m	struct:ec_fs_reply_putbytes1
data_port	fs_proto.h	/^	uint8_t data_port;$/;"	m	struct:ec_fs_reply_save1
datadir	makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	makefile	/^datarootdir = ${prefix}\/share$/;"	m
date	fs_proto.h	/^	struct ec_fs_date date;$/;"	m	struct:ec_fs_exall	typeref:struct:ec_fs_exall::ec_fs_date
date	fs_proto.h	/^	struct ec_fs_date date;$/;"	m	struct:ec_fs_reply_create	typeref:struct:ec_fs_reply_create::ec_fs_date
date	fs_proto.h	/^	struct ec_fs_date date;$/;"	m	struct:ec_fs_reply_get_time	typeref:struct:ec_fs_reply_get_time::ec_fs_date
date	fs_proto.h	/^	struct ec_fs_date date;$/;"	m	struct:ec_fs_reply_info_all	typeref:struct:ec_fs_reply_info_all::ec_fs_date
date	fs_proto.h	/^	struct ec_fs_date date;$/;"	m	struct:ec_fs_reply_info_ctime	typeref:struct:ec_fs_reply_info_ctime::ec_fs_date
date	fs_proto.h	/^	struct ec_fs_date date;$/;"	m	struct:ec_fs_reply_load1	typeref:struct:ec_fs_reply_load1::ec_fs_date
date	fs_proto.h	/^	struct ec_fs_date date;$/;"	m	struct:ec_fs_reply_save2	typeref:struct:ec_fs_reply_save2::ec_fs_date
date	fs_proto.h	/^	struct ec_fs_date date;$/;"	m	struct:ec_fs_req_set_time	typeref:struct:ec_fs_req_set_time::ec_fs_date
day	fs_proto.h	/^	uint8_t day;$/;"	m	struct:ec_fs_date
debug	aund.c	/^int debug = 0;$/;"	v
default_infoformat	fileserver.c	/^enum fs_info_format default_infoformat = FS_INFO_RISCOS;$/;"	v	typeref:enum:fs_info_format
default_opt4	fileserver.c	/^int default_opt4 = 0;$/;"	v
default_safehandles	fileserver.c	/^bool default_safehandles = true;$/;"	v
default_timeout	aun.c	/^int default_timeout = 100000;$/;"	v
depcomp	makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
dequote	conf_lex.c	/^dequote(char *str)$/;"	f	file:
dest_port	aun.h	/^	uint8_t dest_port;$/;"	m	struct:aun_packet
dir_access	fs_proto.h	/^	uint8_t dir_access;$/;"	m	struct:ec_fs_reply_info_dir
dir_cache	fileserver.h	/^	struct fs_dir_cache dir_cache;$/;"	m	struct:fs_client	typeref:struct:fs_client::fs_dir_cache
dir_name	fs_proto.h	/^	char dir_name[10];	       \/* space-padded *\/$/;"	m	struct:ec_fs_reply_cat_header
dir_name	fs_proto.h	/^	char dir_name[10];$/;"	m	struct:ec_fs_reply_info_dir
disc	fs_proto.h	/^	uint8_t disc;$/;"	m	struct:ec_fs_reply_info_uid
discname	fileserver.c	/^char discname[17];$/;"	v
discname	fs_proto.h	/^	char discname[0];$/;"	m	struct:ec_fs_req_get_disc_free
discnamelen	fs_proto.h	/^	uint8_t discnamelen; 	\/* Disc name length max *\/$/;"	m	struct:ec_fs_reply_get_uenv
distcleancheck_listfiles	makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
docdir	makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
dopidfile	aund.c	/^dopidfile(char const *pidfile)$/;"	f	file:
drives	fs_proto.h	/^	struct ec_fs_disc drives[0];$/;"	m	struct:ec_fs_reply_get_discs	typeref:struct:ec_fs_reply_get_discs::ec_fs_disc
dvidir	makefile	/^dvidir = ${docdir}$/;"	m
eaddr	beebem.c	/^	struct econet_addr eaddr;$/;"	m	union:internal_addr	typeref:struct:internal_addr::econet_addr	file:
ec2ip	beebem.c	/^} ec2ip[256*256];		       \/* index is network*256+station *\/$/;"	v	typeref:struct:ipport	file:
ec_fs_date	fs_proto.h	/^struct ec_fs_date {$/;"	s
ec_fs_disc	fs_proto.h	/^struct ec_fs_disc {$/;"	s
ec_fs_exall	fs_proto.h	/^struct ec_fs_exall {$/;"	s
ec_fs_exname	fs_proto.h	/^struct ec_fs_exname {$/;"	s
ec_fs_meta	fs_proto.h	/^struct ec_fs_meta {$/;"	s
ec_fs_reply	fs_proto.h	/^struct ec_fs_reply {$/;"	s
ec_fs_reply_cat_header	fs_proto.h	/^struct ec_fs_reply_cat_header {$/;"	s
ec_fs_reply_cli_load	fs_proto.h	/^struct ec_fs_reply_cli_load {$/;"	s
ec_fs_reply_cli_save	fs_proto.h	/^struct ec_fs_reply_cli_save {$/;"	s
ec_fs_reply_create	fs_proto.h	/^struct ec_fs_reply_create { \/* identical to save2 *\/$/;"	s
ec_fs_reply_delete	fs_proto.h	/^struct ec_fs_reply_delete {$/;"	s
ec_fs_reply_dir	fs_proto.h	/^struct ec_fs_reply_dir {$/;"	s
ec_fs_reply_examine	fs_proto.h	/^struct ec_fs_reply_examine {$/;"	s
ec_fs_reply_examine_all	fs_proto.h	/^struct ec_fs_reply_examine_all {$/;"	s
ec_fs_reply_examine_name	fs_proto.h	/^struct ec_fs_reply_examine_name {$/;"	s
ec_fs_reply_get_args	fs_proto.h	/^struct ec_fs_reply_get_args {$/;"	s
ec_fs_reply_get_disc_free	fs_proto.h	/^struct ec_fs_reply_get_disc_free {$/;"	s
ec_fs_reply_get_discs	fs_proto.h	/^struct ec_fs_reply_get_discs {$/;"	s
ec_fs_reply_get_eof	fs_proto.h	/^struct ec_fs_reply_get_eof {$/;"	s
ec_fs_reply_get_time	fs_proto.h	/^struct ec_fs_reply_get_time {$/;"	s
ec_fs_reply_get_uenv	fs_proto.h	/^struct ec_fs_reply_get_uenv {$/;"	s
ec_fs_reply_get_user	fs_proto.h	/^struct ec_fs_reply_get_user {$/;"	s
ec_fs_reply_get_user_free	fs_proto.h	/^struct ec_fs_reply_get_user_free {$/;"	s
ec_fs_reply_get_users_on	fs_proto.h	/^struct ec_fs_reply_get_users_on {$/;"	s
ec_fs_reply_get_version	fs_proto.h	/^struct ec_fs_reply_get_version {$/;"	s
ec_fs_reply_getbyte	fs_proto.h	/^struct ec_fs_reply_getbyte {$/;"	s
ec_fs_reply_getbytes2	fs_proto.h	/^struct ec_fs_reply_getbytes2 {$/;"	s
ec_fs_reply_info_access	fs_proto.h	/^struct ec_fs_reply_info_access {$/;"	s
ec_fs_reply_info_all	fs_proto.h	/^struct ec_fs_reply_info_all {$/;"	s
ec_fs_reply_info_ctime	fs_proto.h	/^struct ec_fs_reply_info_ctime {$/;"	s
ec_fs_reply_info_dir	fs_proto.h	/^struct ec_fs_reply_info_dir {$/;"	s
ec_fs_reply_info_meta	fs_proto.h	/^struct ec_fs_reply_info_meta {$/;"	s
ec_fs_reply_info_size	fs_proto.h	/^struct ec_fs_reply_info_size {$/;"	s
ec_fs_reply_info_uid	fs_proto.h	/^struct ec_fs_reply_info_uid {$/;"	s
ec_fs_reply_load1	fs_proto.h	/^struct ec_fs_reply_load1 {$/;"	s
ec_fs_reply_load2	fs_proto.h	/^struct ec_fs_reply_load2 {$/;"	s
ec_fs_reply_logon	fs_proto.h	/^struct ec_fs_reply_logon {$/;"	s
ec_fs_reply_open	fs_proto.h	/^struct ec_fs_reply_open {$/;"	s
ec_fs_reply_putbytes1	fs_proto.h	/^struct ec_fs_reply_putbytes1 {$/;"	s
ec_fs_reply_putbytes2	fs_proto.h	/^struct ec_fs_reply_putbytes2 {$/;"	s
ec_fs_reply_save1	fs_proto.h	/^struct ec_fs_reply_save1 {$/;"	s
ec_fs_reply_save2	fs_proto.h	/^struct ec_fs_reply_save2 {$/;"	s
ec_fs_reply_sdisc	fs_proto.h	/^struct ec_fs_reply_sdisc {$/;"	s
ec_fs_reply_set_user_free	fs_proto.h	/^struct ec_fs_reply_set_user_free {$/;"	s
ec_fs_req	fs_proto.h	/^struct ec_fs_req {$/;"	s
ec_fs_req_cat_header	fs_proto.h	/^struct ec_fs_req_cat_header {$/;"	s
ec_fs_req_cdirn	fs_proto.h	/^struct ec_fs_req_cdirn {$/;"	s
ec_fs_req_close	fs_proto.h	/^struct ec_fs_req_close {$/;"	s
ec_fs_req_create	fs_proto.h	/^struct ec_fs_req_create { \/* almost identical to save *\/$/;"	s
ec_fs_req_delete	fs_proto.h	/^struct ec_fs_req_delete {$/;"	s
ec_fs_req_examine	fs_proto.h	/^struct ec_fs_req_examine {$/;"	s
ec_fs_req_get_args	fs_proto.h	/^struct ec_fs_req_get_args {$/;"	s
ec_fs_req_get_disc_free	fs_proto.h	/^struct ec_fs_req_get_disc_free {$/;"	s
ec_fs_req_get_discs	fs_proto.h	/^struct ec_fs_req_get_discs {$/;"	s
ec_fs_req_get_eof	fs_proto.h	/^struct ec_fs_req_get_eof {$/;"	s
ec_fs_req_get_info	fs_proto.h	/^struct ec_fs_req_get_info {$/;"	s
ec_fs_req_get_user	fs_proto.h	/^struct ec_fs_req_get_user {$/;"	s
ec_fs_req_get_user_free	fs_proto.h	/^struct ec_fs_req_get_user_free {$/;"	s
ec_fs_req_get_users_on	fs_proto.h	/^struct ec_fs_req_get_users_on {$/;"	s
ec_fs_req_getbyte	fs_proto.h	/^struct ec_fs_req_getbyte {$/;"	s
ec_fs_req_getbytes	fs_proto.h	/^struct ec_fs_req_getbytes {$/;"	s
ec_fs_req_load	fs_proto.h	/^struct ec_fs_req_load {$/;"	s
ec_fs_req_open	fs_proto.h	/^struct ec_fs_req_open {$/;"	s
ec_fs_req_putbyte	fs_proto.h	/^struct ec_fs_req_putbyte {$/;"	s
ec_fs_req_putbytes	fs_proto.h	/^struct ec_fs_req_putbytes {$/;"	s
ec_fs_req_save	fs_proto.h	/^struct ec_fs_req_save {$/;"	s
ec_fs_req_set_args	fs_proto.h	/^struct ec_fs_req_set_args {$/;"	s
ec_fs_req_set_info	fs_proto.h	/^struct ec_fs_req_set_info {$/;"	s
ec_fs_req_set_info_access	fs_proto.h	/^struct ec_fs_req_set_info_access {$/;"	s
ec_fs_req_set_info_all	fs_proto.h	/^struct ec_fs_req_set_info_all {$/;"	s
ec_fs_req_set_info_exec	fs_proto.h	/^struct ec_fs_req_set_info_exec {$/;"	s
ec_fs_req_set_info_load	fs_proto.h	/^struct ec_fs_req_set_info_load {$/;"	s
ec_fs_req_set_opt4	fs_proto.h	/^struct ec_fs_req_set_opt4 {$/;"	s
ec_fs_req_set_time	fs_proto.h	/^struct ec_fs_req_set_time {$/;"	s
ec_fs_req_set_user_free	fs_proto.h	/^struct ec_fs_req_set_user_free {$/;"	s
ec_fs_user_on	fs_proto.h	/^struct ec_fs_user_on {$/;"	s
eccount	beebem.c	/^static int eccount = 0;$/;"	v	file:
eclist	beebem.c	/^static unsigned short eclist[256*256];$/;"	v	file:
econet_addr	beebem.c	/^struct econet_addr {$/;"	s	file:
err	fs_error.c	/^	uint8_t err;$/;"	m	struct:__anon5	file:
errmsgtab	fs_error.c	/^} errmsgtab[] = {$/;"	v	typeref:struct:__anon5	file:
errnotab	fs_error.c	/^} errnotab[] = {$/;"	v	typeref:struct:__anon4	file:
errnoval	fs_error.c	/^	int errnoval;$/;"	m	struct:__anon4	file:
exec_addr	fs_proto.h	/^	uint8_t exec_addr[4];$/;"	m	struct:ec_fs_meta
exec_addr	fs_proto.h	/^	uint8_t exec_addr[4];$/;"	m	struct:ec_fs_req_set_info_exec
exec_prefix	makefile	/^exec_prefix = ${prefix}$/;"	m
f	fileserver.h	/^	FTSENT *f; \/* Result of fts_children on path *\/$/;"	m	struct:fs_dir_cache
fd	fileserver.h	/^	int	fd;$/;"	m	struct:fs_handle
file_server	fileserver.c	/^file_server(struct aun_packet *pkt, ssize_t len, struct aun_srcaddr *from)$/;"	f
fixedurd	fileserver.c	/^char *fixedurd = ".";		       \/* default to the root dir *\/$/;"	v
flag	aun.h	/^	uint8_t flag;$/;"	m	struct:aun_packet
flag	fs_proto.h	/^	uint8_t flag;$/;"	m	struct:ec_fs_reply_getbyte
flag	fs_proto.h	/^	uint8_t flag;$/;"	m	struct:ec_fs_reply_getbytes2
flex_int16_t	conf_lex.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	conf_lex.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	conf_lex.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	conf_lex.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	conf_lex.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	conf_lex.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	conf_lex.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	conf_lex.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	conf_lex.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	conf_lex.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint64_t	conf_lex.c	/^typedef uint64_t flex_uint64_t;$/;"	t	file:
flex_uint8_t	conf_lex.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	conf_lex.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
foreground	aund.c	/^int foreground = 0;$/;"	v
fp	pw.c	/^static FILE *fp, *newfp;$/;"	v	file:
free_blocks	fs_proto.h	/^	uint8_t free_blocks[3]; \/* Units of 0x100 bytes *\/$/;"	m	struct:ec_fs_reply_get_disc_free
free_bytes	fs_proto.h	/^	uint8_t free_bytes[4];$/;"	m	struct:ec_fs_reply_get_user_free
free_bytes	fs_proto.h	/^    uint8_t free_bytes[4];$/;"	m	struct:ec_fs_reply_set_user_free
from	fileserver.h	/^	struct aun_srcaddr *from;	\/* Source of request *\/$/;"	m	struct:fs_context	typeref:struct:fs_context::aun_srcaddr
fs_access_to_mode	fs_util.c	/^fs_access_to_mode(unsigned char access, int usergroup)$/;"	f
fs_access_to_string	fs_util.c	/^fs_access_to_string(char *buf, uint8_t access)$/;"	f
fs_acornify_name	fs_nametrans.c	/^fs_acornify_name(char *name)$/;"	f
fs_add_typemap_default	fs_filetype.c	/^fs_add_typemap_default(int type)$/;"	f
fs_add_typemap_mode	fs_filetype.c	/^fs_add_typemap_mode(mode_t val, mode_t mask, int type)$/;"	f
fs_add_typemap_name	fs_filetype.c	/^fs_add_typemap_name(const char *re, int type)$/;"	f
fs_alloc_handle	fs_handle.c	/^fs_alloc_handle(struct fs_client *client, bool for_open)$/;"	f	file:
fs_alloc_handle_255	fs_handle.c	/^fs_alloc_handle_255(struct fs_client *client)$/;"	f	file:
fs_alloc_handle_np2	fs_handle.c	/^fs_alloc_handle_np2(struct fs_client *client)$/;"	f	file:
fs_alloc_handle_p2	fs_handle.c	/^fs_alloc_handle_p2(struct fs_client *client)$/;"	f	file:
fs_cat_header	fs_misc.c	/^fs_cat_header(struct fs_context *c)$/;"	f
fs_cdir1	fs_misc.c	/^fs_cdir1(struct fs_context *c, char *path)$/;"	f
fs_cdirn	fs_misc.c	/^fs_cdirn(struct fs_context *c)$/;"	f
fs_check_handle	fs_handle.c	/^int fs_check_handle(struct fs_client *client, int h)$/;"	f
fs_check_handles	fs_handle.c	/^void fs_check_handles(struct fs_context *c)$/;"	f
fs_check_typemap	fs_filetype.c	/^int fs_check_typemap(FTSENT *f, struct fs_typemap *map)$/;"	f
fs_cli	fs_cli.c	/^fs_cli(struct fs_context *c)$/;"	f
fs_cli_getarg	fs_cli.c	/^fs_cli_getarg(char **stringp)$/;"	f
fs_cli_match	fs_cli.c	/^fs_cli_match(char *cmdline, char **tail, const struct fs_cmd *cmd)$/;"	f	file:
fs_cli_unrec	fs_cli.c	/^fs_cli_unrec(struct fs_context *c, char *cmd)$/;"	f	file:
fs_client	fileserver.h	/^struct fs_client {$/;"	s
fs_clients	fileserver.c	/^struct fs_client_head fs_clients = LIST_HEAD_INITIALIZER(fs_clients);$/;"	v	typeref:struct:fs_client_head
fs_close	fs_fileio.c	/^fs_close(struct fs_context *c)$/;"	f
fs_close1	fs_fileio.c	/^fs_close1(struct fs_context *c, int h)$/;"	f	file:
fs_close_handle	fs_handle.c	/^fs_close_handle(struct fs_client *client, int h)$/;"	f
fs_cmd	fs_cli.c	/^struct fs_cmd {$/;"	s	file:
fs_cmd_access	fs_cli.c	/^fs_cmd_access(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_access	fs_cli.c	/^static fs_cmd_impl fs_cmd_access;$/;"	v	file:
fs_cmd_bye	fs_cli.c	/^fs_cmd_bye(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_bye	fs_cli.c	/^static fs_cmd_impl fs_cmd_bye;$/;"	v	file:
fs_cmd_cat	fs_cli.c	/^fs_cmd_cat(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_cat	fs_cli.c	/^static fs_cmd_impl fs_cmd_cat;$/;"	v	file:
fs_cmd_cdir	fs_cli.c	/^fs_cmd_cdir(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_cdir	fs_cli.c	/^static fs_cmd_impl fs_cmd_cdir;$/;"	v	file:
fs_cmd_delete	fs_cli.c	/^fs_cmd_delete(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_delete	fs_cli.c	/^static fs_cmd_impl fs_cmd_delete;$/;"	v	file:
fs_cmd_dir	fs_cli.c	/^fs_cmd_dir(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_dir	fs_cli.c	/^static fs_cmd_impl fs_cmd_dir;$/;"	v	file:
fs_cmd_fsopt	fs_cli.c	/^fs_cmd_fsopt(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_fsopt	fs_cli.c	/^static fs_cmd_impl fs_cmd_fsopt;$/;"	v	file:
fs_cmd_i_am	fs_cli.c	/^fs_cmd_i_am(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_i_am	fs_cli.c	/^static fs_cmd_impl fs_cmd_i_am;$/;"	v	file:
fs_cmd_impl	fs_cli.c	/^typedef void fs_cmd_impl(struct fs_context *, char *);$/;"	t	file:
fs_cmd_info	fs_cli.c	/^fs_cmd_info(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_info	fs_cli.c	/^static fs_cmd_impl fs_cmd_info;$/;"	v	file:
fs_cmd_lib	fs_cli.c	/^fs_cmd_lib(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_lib	fs_cli.c	/^static fs_cmd_impl fs_cmd_lib;$/;"	v	file:
fs_cmd_load	fs_cli.c	/^fs_cmd_load(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_load	fs_cli.c	/^static fs_cmd_impl fs_cmd_load;$/;"	v	file:
fs_cmd_pass	fs_cli.c	/^fs_cmd_pass(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_pass	fs_cli.c	/^static fs_cmd_impl fs_cmd_pass;$/;"	v	file:
fs_cmd_priv	fs_cli.c	/^fs_cmd_priv(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_priv	fs_cli.c	/^static fs_cmd_impl fs_cmd_priv;$/;"	v	file:
fs_cmd_rename	fs_cli.c	/^fs_cmd_rename(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_rename	fs_cli.c	/^static fs_cmd_impl fs_cmd_rename;$/;"	v	file:
fs_cmd_save	fs_cli.c	/^fs_cmd_save(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_save	fs_cli.c	/^static fs_cmd_impl fs_cmd_save;$/;"	v	file:
fs_cmd_sdisc	fs_cli.c	/^fs_cmd_sdisc(struct fs_context *c, char *tail)$/;"	f	file:
fs_cmd_sdisc	fs_cli.c	/^static fs_cmd_impl fs_cmd_sdisc;$/;"	v	file:
fs_context	fileserver.h	/^struct fs_context {$/;"	s
fs_create	fs_fileio.c	/^fs_create(struct fs_context *c)$/;"	f
fs_data_recv	fs_fileio.c	/^fs_data_recv(struct fs_context *c, int fd, size_t size, int ackport)$/;"	f	file:
fs_data_send	fs_fileio.c	/^fs_data_send(struct fs_context *c, int fd, size_t size)$/;"	f	file:
fs_del_meta	fs_util.c	/^fs_del_meta(FTSENT *f)$/;"	f
fs_delete	fs_misc.c	/^fs_delete(struct fs_context *c)$/;"	f
fs_delete1	fs_misc.c	/^fs_delete1(struct fs_context *c, char *path)$/;"	f
fs_delete_client	fileserver.c	/^fs_delete_client(struct fs_client *client)$/;"	f
fs_dir_cache	fileserver.h	/^struct fs_dir_cache {$/;"	s
fs_dispatch	fileserver.c	/^fs_func_impl * const fs_dispatch[] = {$/;"	v
fs_err	fs_error.c	/^	uint8_t fs_err;$/;"	m	struct:__anon4	file:
fs_err	fs_error.c	/^fs_err(struct fs_context *c, uint8_t err)$/;"	f
fs_errno	fs_error.c	/^fs_errno(struct fs_context *c)$/;"	f
fs_error	fs_error.c	/^fs_error(struct fs_context *c, uint8_t err, const char *report)$/;"	f
fs_examine	fs_examine.c	/^fs_examine(struct fs_context *c)$/;"	f
fs_examine_all	fs_examine.c	/^fs_examine_all(FTSENT *ent, struct ec_fs_reply_examine **replyp,$/;"	f	file:
fs_examine_longtxt	fs_examine.c	/^fs_examine_longtxt(struct fs_context *c, FTSENT *ent,$/;"	f	file:
fs_examine_name	fs_examine.c	/^fs_examine_name(FTSENT *ent, struct ec_fs_reply_examine **replyp,$/;"	f	file:
fs_examine_read	fs_examine.c	/^fs_examine_read(struct fs_context *c, const char *upath, int start)$/;"	f	file:
fs_examine_shorttxt	fs_examine.c	/^fs_examine_shorttxt(FTSENT *ent, struct ec_fs_reply_examine **replyp,$/;"	f	file:
fs_filename_compare	fs_examine.c	/^fs_filename_compare(const FTSENT **a, const FTSENT **b)$/;"	f	file:
fs_find_client	fileserver.c	/^fs_find_client(struct aun_srcaddr *from)$/;"	f
fs_free_handle	fs_handle.c	/^fs_free_handle(struct fs_client *client, int h)$/;"	f	file:
fs_func_impl	fileserver.h	/^typedef void fs_func_impl(struct fs_context *);$/;"	t
fs_get_args	fs_fileio.c	/^fs_get_args(struct fs_context *c)$/;"	f
fs_get_birthtime	fs_util.c	/^fs_get_birthtime(FTSENT *f)$/;"	f
fs_get_disc_free	fs_misc.c	/^fs_get_disc_free(struct fs_context *c)$/;"	f
fs_get_discs	fs_misc.c	/^fs_get_discs(struct fs_context *c)$/;"	f
fs_get_eof	fs_fileio.c	/^fs_get_eof(struct fs_context *c)$/;"	f
fs_get_info	fs_misc.c	/^fs_get_info(struct fs_context *c)$/;"	f
fs_get_meta	fs_util.c	/^fs_get_meta(FTSENT *f, struct ec_fs_meta *meta)$/;"	f
fs_get_sin	fs_util.c	/^fs_get_sin(FTSENT *f)$/;"	f
fs_get_time	fs_misc.c	/^fs_get_time(struct fs_context *c)$/;"	f
fs_get_uenv	fs_misc.c	/^fs_get_uenv(struct fs_context *c)$/;"	f
fs_get_user	fs_misc.c	/^fs_get_user(struct fs_context *c)$/;"	f
fs_get_user_free	fs_misc.c	/^fs_get_user_free(struct fs_context *c)$/;"	f
fs_get_users_on	fs_misc.c	/^fs_get_users_on(struct fs_context *c)$/;"	f
fs_get_version	fs_misc.c	/^fs_get_version(struct fs_context *c)$/;"	f
fs_getbyte	fs_fileio.c	/^fs_getbyte(struct fs_context *c)$/;"	f
fs_getbytes	fs_fileio.c	/^fs_getbytes(struct fs_context *c)$/;"	f
fs_guess_type	fs_filetype.c	/^int fs_guess_type(FTSENT *f)$/;"	f
fs_handle	fileserver.h	/^struct fs_handle {$/;"	s
fs_handle_type	fileserver.h	/^enum fs_handle_type { FS_HANDLE_FILE, FS_HANDLE_DIR };$/;"	g
fs_hidden_name	fs_nametrans.c	/^fs_hidden_name(char *name)$/;"	f
fs_info_format	fileserver.h	/^extern enum fs_info_format { FS_INFO_RISCOS, FS_INFO_SJ } default_infoformat;$/;"	g
fs_init	fileserver.c	/^fs_init(void)$/;"	f
fs_is_owner	fs_util.c	/^fs_is_owner(struct fs_context *c,char *path)$/;"	f
fs_leafname	fs_util.c	/^fs_leafname(const char *path)$/;"	f
fs_load	fs_fileio.c	/^fs_load(struct fs_context *c)$/;"	f
fs_logoff	fs_misc.c	/^fs_logoff(struct fs_context *c)$/;"	f
fs_long_info	fs_cli.c	/^fs_long_info(struct fs_context *c, char *string, FTSENT *f)$/;"	f
fs_map_kind	fs_filetype.c	/^enum fs_map_kind { FS_MAP_DEFAULT, FS_MAP_MODE, FS_MAP_NAME };$/;"	g	file:
fs_match_path	fs_nametrans.c	/^fs_match_path(char *path)$/;"	f	file:
fs_metapath	fs_util.c	/^fs_metapath(FTSENT *f)$/;"	f	file:
fs_mode_to_access	fs_util.c	/^fs_mode_to_access(mode_t mode)$/;"	f
fs_mode_to_type	fs_util.c	/^fs_mode_to_type(mode_t mode)$/;"	f
fs_new_client	fileserver.c	/^fs_new_client(struct aun_srcaddr *from)$/;"	f
fs_open	fs_fileio.c	/^fs_open(struct fs_context *c)$/;"	f
fs_open_handle	fs_handle.c	/^fs_open_handle(struct fs_client *client, char *path, int open_flags,$/;"	f
fs_putbyte	fs_fileio.c	/^fs_putbyte(struct fs_context *c)$/;"	f
fs_putbytes	fs_fileio.c	/^fs_putbytes(struct fs_context *c)$/;"	f
fs_randomio_common	fs_fileio.c	/^fs_randomio_common(struct fs_context *c, int h)$/;"	f	file:
fs_read_access	fs_util.c	/^fs_read_access(struct fs_context *c,char *path)$/;"	f
fs_read_val	fs_util.c	/^fs_read_val(uint8_t *p, size_t len)$/;"	f
fs_reply	fileserver.c	/^fs_reply(struct fs_context *c, struct ec_fs_reply *reply, size_t len)$/;"	f
fs_riscos_date	fs_util.c	/^fs_riscos_date(time_t time, unsigned csec)$/;"	f
fs_save	fs_fileio.c	/^fs_save(struct fs_context *c)$/;"	f
fs_set_args	fs_fileio.c	/^fs_set_args(struct fs_context *c)$/;"	f
fs_set_info	fs_misc.c	/^fs_set_info(struct fs_context *c)$/;"	f
fs_set_meta	fs_util.c	/^fs_set_meta(FTSENT *f, struct ec_fs_meta *meta)$/;"	f
fs_set_opt4	fs_misc.c	/^fs_set_opt4(struct fs_context *c)$/;"	f
fs_set_user_free	fs_misc.c	/^fs_set_user_free(struct fs_context *c, char *tail)$/;"	f
fs_stat	fs_util.c	/^fs_stat(const char *path, struct stat *sb)$/;"	f
fs_trans_simple	fs_nametrans.c	/^fs_trans_simple(char *pathret, char *path)$/;"	f	file:
fs_typemap	fs_filetype.c	/^struct fs_typemap {$/;"	s	file:
fs_unhat_path	fs_nametrans.c	/^fs_unhat_path(char *path)$/;"	f	file:
fs_unixify_path	fs_nametrans.c	/^fs_unixify_path(struct fs_context *c, char *path)$/;"	f
fs_unrec	fileserver.c	/^fs_unrec(struct fs_context *c)$/;"	f
fs_write_date	fs_util.c	/^fs_write_date(struct ec_fs_date *date, time_t time)$/;"	f
fs_write_val	fs_util.c	/^fs_write_val(uint8_t *p, uint64_t value, size_t len)$/;"	f
fsnum	fs_proto.h	/^	uint8_t fsnum[2];$/;"	m	struct:ec_fs_reply_info_uid
ftsp	fileserver.h	/^	FTS *ftsp; \/* Pass to fts_close to free f *\/$/;"	m	struct:fs_dir_cache
func	conf_lex.c	/^		void (*func)(union cfything *);$/;"	m	struct:cfything::__anon3	file:
func	conf_lex.c	/^	} func;$/;"	m	union:cfything	typeref:struct:cfything::__anon3	file:
func_cl_dashL	compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	compile	/^func_cl_wrapper ()$/;"	f
func_file_conv	compile	/^func_file_conv ()$/;"	f
function	fs_proto.h	/^	uint8_t function;$/;"	m	struct:ec_fs_req
function	fs_proto.h	/^	uint8_t function;$/;"	m	struct:ec_fs_req_getbyte
function	fs_proto.h	/^	uint8_t function;$/;"	m	struct:ec_fs_req_putbyte
get_priv	fileserver.h	/^  	int (*get_priv)(char const *);$/;"	m	struct:user_funcs
get_stn	extern.h	/^	void (*get_stn)(struct aun_srcaddr *addr, uint8_t *out);$/;"	m	struct:aun_funcs
handle	fs_proto.h	/^	uint8_t handle;$/;"	m	struct:ec_fs_reply_open
handle	fs_proto.h	/^	uint8_t handle;$/;"	m	struct:ec_fs_req_close
handle	fs_proto.h	/^	uint8_t handle;$/;"	m	struct:ec_fs_req_get_args
handle	fs_proto.h	/^	uint8_t handle;$/;"	m	struct:ec_fs_req_get_eof
handle	fs_proto.h	/^	uint8_t handle;$/;"	m	struct:ec_fs_req_getbyte
handle	fs_proto.h	/^	uint8_t handle;$/;"	m	struct:ec_fs_req_getbytes
handle	fs_proto.h	/^	uint8_t handle;$/;"	m	struct:ec_fs_req_putbyte
handle	fs_proto.h	/^	uint8_t handle;$/;"	m	struct:ec_fs_req_putbytes
handle	fs_proto.h	/^	uint8_t handle;$/;"	m	struct:ec_fs_req_set_args
handles	fileserver.h	/^	struct fs_handle **handles; \/* array of handles for this client *\/$/;"	m	struct:fs_client	typeref:struct:fs_client::fs_handle
host	fileserver.h	/^	struct aun_srcaddr host;$/;"	m	struct:fs_client	typeref:struct:fs_client::aun_srcaddr
host_alias	makefile	/^host_alias = $/;"	m
hours	fs_proto.h	/^	uint8_t hours;$/;"	m	struct:ec_fs_reply_get_time
hours	fs_proto.h	/^	uint8_t hours;$/;"	m	struct:ec_fs_req_set_time
htmldir	makefile	/^htmldir = ${docdir}$/;"	m
impl	fs_cli.c	/^	fs_cmd_impl	*impl;$/;"	m	struct:fs_cmd	file:
includedir	makefile	/^includedir = ${prefix}\/include$/;"	m
infodir	makefile	/^infodir = ${datarootdir}\/info$/;"	m
infoformat	fileserver.h	/^	enum fs_info_format infoformat;$/;"	m	struct:fs_client	typeref:enum:fs_client::fs_info_format
install_sh	makefile	/^install_sh = ${SHELL} \/Users\/steveinglis\/documents\/aund\/install-sh$/;"	m
install_sh_DATA	makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
internal_addr	aun.c	/^union internal_addr {$/;"	u	file:
internal_addr	beebem.c	/^union internal_addr {$/;"	u	file:
ipport	beebem.c	/^static struct ipport {$/;"	s	file:
kind	fs_filetype.c	/^	enum fs_map_kind kind;$/;"	m	struct:fs_typemap	typeref:enum:fs_typemap::fs_map_kind	file:
lib	fileserver.c	/^char *lib = ".";		       \/* default to the root dir *\/$/;"	v
lib	fs_proto.h	/^	uint8_t lib;$/;"	m	struct:ec_fs_reply_logon
lib	fs_proto.h	/^	uint8_t lib;$/;"	m	struct:ec_fs_reply_sdisc
lib	fs_proto.h	/^	uint8_t lib;$/;"	m	struct:ec_fs_req
lib_leafname	fs_proto.h	/^	char lib_leafname[10];	\/* Leaf name of lib *\/$/;"	m	struct:ec_fs_reply_get_uenv
libconf_lex_a_AR	makefile	/^libconf_lex_a_AR = $(AR) $(ARFLAGS)$/;"	m
libconf_lex_a_CFLAGS	makefile	/^libconf_lex_a_CFLAGS = $(GCCFEWERWARNINGS)$/;"	m
libconf_lex_a_LIBADD	makefile	/^libconf_lex_a_LIBADD =$/;"	m
libconf_lex_a_OBJECTS	makefile	/^libconf_lex_a_OBJECTS = $(am_libconf_lex_a_OBJECTS)$/;"	m
libconf_lex_a_SOURCES	makefile	/^libconf_lex_a_SOURCES = conf_lex.l$/;"	m
libdir	makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
link	fileserver.h	/^	LIST_ENTRY(fs_client) link;$/;"	m	struct:fs_client
load_addr	fs_proto.h	/^	uint8_t load_addr[4];$/;"	m	struct:ec_fs_meta
load_addr	fs_proto.h	/^	uint8_t load_addr[4];$/;"	m	struct:ec_fs_reply_cli_load
load_addr	fs_proto.h	/^	uint8_t load_addr[4];$/;"	m	struct:ec_fs_req_set_info_load
load_addr_found	fs_proto.h	/^	uint8_t load_addr_found;$/;"	m	struct:ec_fs_reply_cli_load
localedir	makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	makefile	/^localstatedir = ${prefix}\/var$/;"	m
login	fileserver.h	/^	char *login;$/;"	m	struct:fs_client
main	aund.c	/^main(int argc, char *argv[])$/;"	f
man5dir	makefile	/^man5dir = $(mandir)\/man5$/;"	m
man8dir	makefile	/^man8dir = $(mandir)\/man8$/;"	m
man_MANS	makefile	/^man_MANS = aund.conf.5 aund.passwd.5 aund.8$/;"	m
mandir	makefile	/^mandir = ${datarootdir}\/man$/;"	m
mask	fs_filetype.c	/^			mode_t mask;$/;"	m	struct:fs_typemap::__anon1::__anon2	file:
max_block	extern.h	/^	int max_block;$/;"	m	struct:aun_funcs
meta	fs_proto.h	/^	struct ec_fs_meta meta;$/;"	m	struct:ec_fs_exall	typeref:struct:ec_fs_exall::ec_fs_meta
meta	fs_proto.h	/^	struct ec_fs_meta meta;$/;"	m	struct:ec_fs_reply_cli_save	typeref:struct:ec_fs_reply_cli_save::ec_fs_meta
meta	fs_proto.h	/^	struct ec_fs_meta meta;$/;"	m	struct:ec_fs_reply_delete	typeref:struct:ec_fs_reply_delete::ec_fs_meta
meta	fs_proto.h	/^	struct ec_fs_meta meta;$/;"	m	struct:ec_fs_reply_info_all	typeref:struct:ec_fs_reply_info_all::ec_fs_meta
meta	fs_proto.h	/^	struct ec_fs_meta meta;$/;"	m	struct:ec_fs_reply_info_meta	typeref:struct:ec_fs_reply_info_meta::ec_fs_meta
meta	fs_proto.h	/^	struct ec_fs_meta meta;$/;"	m	struct:ec_fs_reply_load1	typeref:struct:ec_fs_reply_load1::ec_fs_meta
meta	fs_proto.h	/^	struct ec_fs_meta meta;$/;"	m	struct:ec_fs_req_create	typeref:struct:ec_fs_req_create::ec_fs_meta
meta	fs_proto.h	/^	struct ec_fs_meta meta;$/;"	m	struct:ec_fs_req_save	typeref:struct:ec_fs_req_save::ec_fs_meta
meta	fs_proto.h	/^	struct ec_fs_meta meta;$/;"	m	struct:ec_fs_req_set_info_all	typeref:struct:ec_fs_req_set_info_all::ec_fs_meta
minlen	fs_cli.c	/^	int	minlen;$/;"	m	struct:fs_cmd	file:
mins	fs_proto.h	/^	uint8_t mins;$/;"	m	struct:ec_fs_reply_get_time
mins	fs_proto.h	/^	uint8_t mins;$/;"	m	struct:ec_fs_req_set_time
mkdir_p	makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mode	conf_lex.c	/^		mode_t mode;$/;"	m	struct:cfything::__anon3	file:
mode	fs_filetype.c	/^		} mode;$/;"	m	union:fs_typemap::__anon1	typeref:struct:fs_typemap::__anon1::__anon2	file:
msg	fs_error.c	/^	char *msg;$/;"	m	struct:__anon5	file:
must_exist	fs_proto.h	/^	uint8_t must_exist; \/* 0 or 1 *\/$/;"	m	struct:ec_fs_req_open
name	fs_cli.c	/^	char	*name;$/;"	m	struct:fs_cmd	file:
name	fs_proto.h	/^	char name[10];$/;"	m	struct:ec_fs_exall
name	fs_proto.h	/^	char name[10];$/;"	m	struct:ec_fs_exname
name	fs_proto.h	/^	char name[16];$/;"	m	struct:ec_fs_disc
name_re	fs_filetype.c	/^		regex_t *name_re;$/;"	m	union:fs_typemap::__anon1	file:
namelen	fs_proto.h	/^	uint8_t namelen; \/* Always 10, apparently *\/$/;"	m	struct:ec_fs_exname
nbytes	fs_proto.h	/^	uint8_t nbytes[3];$/;"	m	struct:ec_fs_reply_getbytes2
nbytes	fs_proto.h	/^	uint8_t nbytes[3];$/;"	m	struct:ec_fs_reply_putbytes2
nbytes	fs_proto.h	/^	uint8_t nbytes[3];$/;"	m	struct:ec_fs_req_getbytes
nbytes	fs_proto.h	/^	uint8_t nbytes[3];$/;"	m	struct:ec_fs_req_putbytes
ndrives	fs_proto.h	/^	uint8_t ndrives;$/;"	m	struct:ec_fs_reply_get_discs
ndrives	fs_proto.h	/^	uint8_t ndrives;$/;"	m	struct:ec_fs_req_get_discs
nentries	fs_proto.h	/^	uint8_t nentries;$/;"	m	struct:ec_fs_reply_examine
nentries	fs_proto.h	/^	uint8_t nentries;$/;"	m	struct:ec_fs_reply_examine_all
nentries	fs_proto.h	/^	uint8_t nentries;$/;"	m	struct:ec_fs_reply_examine_name
nentries	fs_proto.h	/^	uint8_t nentries;$/;"	m	struct:ec_fs_req_examine
network	beebem.c	/^	uint8_t network;$/;"	m	struct:econet_addr	file:
new_handle	fs_proto.h	/^	uint8_t new_handle;$/;"	m	struct:ec_fs_reply_dir
newfp	pw.c	/^static FILE *fp, *newfp;$/;"	v	file:
nhandles	fileserver.h	/^	int nhandles;$/;"	m	struct:fs_client
noinst_LIBRARIES	makefile	/^noinst_LIBRARIES = libconf_lex.a$/;"	m
ntoa	extern.h	/^	char *(*ntoa)(struct aun_srcaddr *addr);$/;"	m	struct:aun_funcs
null_change	user_null.c	/^null_change(char const *user, char const *oldpw, char const *newpw)$/;"	f	file:
null_set_opt4	user_null.c	/^null_set_opt4(char const *user, int opt4)$/;"	f	file:
null_urd	user_null.c	/^null_urd(char const *user)$/;"	f	file:
null_validate	user_null.c	/^null_validate(char *user, char const *pw, int *opt4)$/;"	f	file:
num	fs_proto.h	/^	uint8_t num;$/;"	m	struct:ec_fs_disc
nusers	fs_proto.h	/^	uint8_t nusers;$/;"	m	struct:ec_fs_reply_get_users_on
nusers	fs_proto.h	/^	uint8_t nusers;$/;"	m	struct:ec_fs_req_get_users_on
offset	fs_proto.h	/^	uint8_t offset[3]; \/* only if use_ptr != 0 *\/$/;"	m	struct:ec_fs_req_getbytes
offset	fs_proto.h	/^	uint8_t offset[3]; \/* only if use_ptr != 0 *\/$/;"	m	struct:ec_fs_req_putbytes
oldincludedir	makefile	/^oldincludedir = \/usr\/include$/;"	m
oldoffset	fileserver.h	/^	off_t	oldoffset; \/* files only *\/$/;"	m	struct:fs_handle
opt4	fs_proto.h	/^	uint8_t opt4;$/;"	m	struct:ec_fs_reply_logon
opt4	fs_proto.h	/^	uint8_t opt4;$/;"	m	struct:ec_fs_req_set_opt4
our_econet_addr	beebem.c	/^static int our_econet_addr = 254;      \/* 0.254 *\/$/;"	v	file:
ownership	fs_proto.h	/^	char ownership[1];	       \/* 'O'(wner) or 'P'(ublic) *\/$/;"	m	struct:ec_fs_reply_cat_header
painful_death	aund.c	/^volatile int painful_death = 0;$/;"	v
path	fileserver.h	/^	char	*path;$/;"	m	struct:fs_handle
path	fileserver.h	/^	char *path; \/* Path for which this is a cache. *\/$/;"	m	struct:fs_dir_cache
path	fs_proto.h	/^	char path[0]; \/* CR terminated *\/$/;"	m	struct:ec_fs_req_cat_header
path	fs_proto.h	/^	char path[0]; \/* CR terminated *\/$/;"	m	struct:ec_fs_req_create
path	fs_proto.h	/^	char path[0]; \/* CR terminated *\/$/;"	m	struct:ec_fs_req_load
path	fs_proto.h	/^	char path[0]; \/* CR terminated *\/$/;"	m	struct:ec_fs_req_save
path	fs_proto.h	/^	char path[0];$/;"	m	struct:ec_fs_reply_cli_load
path	fs_proto.h	/^	char path[0];$/;"	m	struct:ec_fs_reply_cli_save
path	fs_proto.h	/^	char path[0];$/;"	m	struct:ec_fs_req_cdirn
path	fs_proto.h	/^	char path[0];$/;"	m	struct:ec_fs_req_delete
path	fs_proto.h	/^	char path[0];$/;"	m	struct:ec_fs_req_examine
path	fs_proto.h	/^	char path[0];$/;"	m	struct:ec_fs_req_get_info
path	fs_proto.h	/^	char path[0];$/;"	m	struct:ec_fs_req_open
path	fs_proto.h	/^	char path[0];$/;"	m	struct:ec_fs_req_set_info_access
path	fs_proto.h	/^	char path[0];$/;"	m	struct:ec_fs_req_set_info_all
path	fs_proto.h	/^	char path[0];$/;"	m	struct:ec_fs_req_set_info_exec
path	fs_proto.h	/^	char path[0];$/;"	m	struct:ec_fs_req_set_info_load
pdfdir	makefile	/^pdfdir = ${docdir}$/;"	m
pkgdatadir	makefile	/^pkgdatadir = $(datadir)\/aund$/;"	m
pkgincludedir	makefile	/^pkgincludedir = $(includedir)\/aund$/;"	m
pkglibdir	makefile	/^pkglibdir = $(libdir)\/aund$/;"	m
pkglibexecdir	makefile	/^pkglibexecdir = $(libexecdir)\/aund$/;"	m
pkt	fs_proto.h	/^	struct aun_packet pkt;$/;"	m	struct:ec_fs_req_getbyte	typeref:struct:ec_fs_req_getbyte::aun_packet
pkt	fs_proto.h	/^	struct aun_packet pkt;$/;"	m	struct:ec_fs_req_putbyte	typeref:struct:ec_fs_req_putbyte::aun_packet
port	beebem.c	/^	int port;$/;"	m	struct:ipport	file:
prefix	makefile	/^prefix = \/usr\/local$/;"	m
priv	fileserver.h	/^	int priv;$/;"	m	struct:fs_client
priv	fs_proto.h	/^	uint8_t priv;$/;"	m	struct:ec_fs_reply_get_user
priv	fs_proto.h	/^	uint8_t priv;$/;"	m	struct:ec_fs_user_on
progname	aund.c	/^char *progname;$/;"	v
program_transform_name	makefile	/^program_transform_name = s,x,x,$/;"	m
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	makefile	/^psdir = ${docdir}$/;"	m
pw_change	pw.c	/^pw_change(const char *user, const char *oldpw, const char *newpw)$/;"	f	file:
pw_close	pw.c	/^pw_close(void)$/;"	f	file:
pw_close_rename	pw.c	/^pw_close_rename(void)$/;"	f	file:
pw_get_priv	pw.c	/^pw_get_priv(const char *user)$/;"	f	file:
pw_open	pw.c	/^pw_open(int write)$/;"	f	file:
pw_read_line	pw.c	/^pw_read_line(char **user, char **pw, char **urd, char **priv, int *opt4)$/;"	f	file:
pw_set_opt4	pw.c	/^pw_set_opt4(const char *user, int newopt4)$/;"	f	file:
pw_set_priv	pw.c	/^pw_set_priv( struct fs_client *client, const char *user, const char *newpriv)$/;"	f	file:
pw_urd	pw.c	/^pw_urd(char const *user)$/;"	f	file:
pw_validate	pw.c	/^pw_validate(char *user, const char *pw, int *opt4)$/;"	f	file:
pw_write_line	pw.c	/^pw_write_line(char *user, char *pw, char *urd, char *priv, int opt4)$/;"	f	file:
pwfile	pw.c	/^char *pwfile = NULL;$/;"	v
pwline	pw.c	/^static int pwline;$/;"	v	file:
pwtmp	pw.c	/^char *pwtmp = NULL;$/;"	v
rbuf	beebem.c	/^static unsigned char rbuf[65536];$/;"	v	file:
read_only	fs_proto.h	/^	uint8_t read_only;$/;"	m	struct:ec_fs_req_open
recv	extern.h	/^	struct aun_packet *(*recv)(ssize_t *outsize,$/;"	m	struct:aun_funcs	typeref:struct:aun_funcs::recv
reply_port	fs_proto.h	/^	uint8_t reply_port;$/;"	m	struct:ec_fs_req
reply_port	fs_proto.h	/^	uint8_t reply_port;$/;"	m	struct:ec_fs_req_getbyte
reply_port	fs_proto.h	/^	uint8_t reply_port;$/;"	m	struct:ec_fs_req_putbyte
req	fileserver.h	/^	struct ec_fs_req *req;		\/* Request being handled *\/$/;"	m	struct:fs_context	typeref:struct:fs_context::ec_fs_req
req_len	fileserver.h	/^	size_t req_len;			\/* Size of request *\/$/;"	m	struct:fs_context
retrans	aun.h	/^	uint8_t retrans;$/;"	m	struct:aun_packet
return_code	fs_proto.h	/^	uint8_t return_code;$/;"	m	struct:ec_fs_reply
root	fileserver.c	/^char *root = NULL;		       \/* must specify this in config *\/$/;"	v
rpkt	beebem.c	/^static struct aun_packet *const rpkt = (struct aun_packet *)rbuf;$/;"	v	file:
safehandles	fileserver.h	/^	bool safehandles;$/;"	m	struct:fs_client
sbindir	makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbuf	beebem.c	/^static unsigned char sbuf[65536];$/;"	v	file:
sdrive	fs_proto.h	/^	uint8_t sdrive;$/;"	m	struct:ec_fs_req_get_discs
secs	fs_proto.h	/^	uint8_t secs;$/;"	m	struct:ec_fs_reply_get_time
secs	fs_proto.h	/^	uint8_t secs;$/;"	m	struct:ec_fs_req_set_time
seq	aun.h	/^	uint8_t seq[4]; \/* little-endian *\/$/;"	m	struct:aun_packet
sequence	fileserver.h	/^	uint8_t	sequence; \/* also only for files *\/$/;"	m	struct:fs_handle
set_bytes	fs_proto.h	/^    unsigned long long set_bytes;$/;"	m	struct:ec_fs_req_set_user_free
set_opt4	fileserver.h	/^	int (*set_opt4)(char const *, int);$/;"	m	struct:user_funcs
set_priv	fileserver.h	/^	int (*set_priv)(struct fs_client *, char const *, char const *);$/;"	m	struct:user_funcs
setup	extern.h	/^	void (*setup)(void);$/;"	m	struct:aun_funcs
sharedstatedir	makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sig_init	aund.c	/^sig_init(void)$/;"	f	file:
sigcatcher	aund.c	/^sigcatcher(int s)$/;"	f	file:
sin	fs_proto.h	/^	uint8_t sin[3];$/;"	m	struct:ec_fs_exall
sin	fs_proto.h	/^	uint8_t sin[3];$/;"	m	struct:ec_fs_reply_info_uid
sin_addr	aun.c	/^	struct in_addr sin_addr;$/;"	m	union:internal_addr	typeref:struct:internal_addr::in_addr	file:
size	fs_proto.h	/^	uint8_t size; \/* Maximum number of sectors *\/$/;"	m	struct:ec_fs_req_cdirn
size	fs_proto.h	/^	uint8_t size[3]; \/* little-endian *\/$/;"	m	struct:ec_fs_reply_info_size
size	fs_proto.h	/^	uint8_t size[3];$/;"	m	struct:ec_fs_exall
size	fs_proto.h	/^	uint8_t size[3];$/;"	m	struct:ec_fs_reply_cli_save
size	fs_proto.h	/^	uint8_t size[3];$/;"	m	struct:ec_fs_reply_delete
size	fs_proto.h	/^	uint8_t size[3];$/;"	m	struct:ec_fs_reply_info_all
size	fs_proto.h	/^	uint8_t size[3];$/;"	m	struct:ec_fs_reply_load1
size	fs_proto.h	/^	uint8_t size[3];$/;"	m	struct:ec_fs_req_create
size	fs_proto.h	/^	uint8_t size[3];$/;"	m	struct:ec_fs_req_save
sock	aun.c	/^int sock;$/;"	v
sock	beebem.c	/^static int sock;$/;"	v	file:
space	fs_proto.h	/^	char space[1];		       \/* just a space *\/$/;"	m	struct:ec_fs_reply_cat_header
spaces	fs_proto.h	/^	char spaces[3];		       \/* spaces *\/$/;"	m	struct:ec_fs_reply_cat_header
srcaddr	aun.c	/^	struct aun_srcaddr srcaddr;$/;"	m	union:internal_addr	typeref:struct:internal_addr::aun_srcaddr	file:
srcaddr	beebem.c	/^	struct aun_srcaddr srcaddr;$/;"	m	union:internal_addr	typeref:struct:internal_addr::aun_srcaddr	file:
srcdir	makefile	/^srcdir = .$/;"	m
start	fileserver.h	/^	int start; \/* position in the directory this list starts at *\/$/;"	m	struct:fs_dir_cache
start	fs_proto.h	/^	uint8_t start;$/;"	m	struct:ec_fs_req_examine
start	fs_proto.h	/^	uint8_t start;$/;"	m	struct:ec_fs_req_get_users_on
station	beebem.c	/^	uint8_t station;$/;"	m	struct:econet_addr	file:
station	fs_proto.h	/^	uint8_t station[2];$/;"	m	struct:ec_fs_reply_get_user
station	fs_proto.h	/^	uint8_t station[2];$/;"	m	struct:ec_fs_user_on
status	fs_proto.h	/^	uint8_t status; \/* 0xff if outside file, 0x00 otherwise *\/$/;"	m	struct:ec_fs_reply_get_eof
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx; \/* Whatever the manual says *\/$/;"	m	struct:ec_fs_req_getbytes	typeref:struct:ec_fs_req_getbytes::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx; \/* Whatever the manual says *\/$/;"	m	struct:ec_fs_req_putbytes	typeref:struct:ec_fs_req_putbytes::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_cat_header	typeref:struct:ec_fs_req_cat_header::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_cdirn	typeref:struct:ec_fs_req_cdirn::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_close	typeref:struct:ec_fs_req_close::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_create	typeref:struct:ec_fs_req_create::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_delete	typeref:struct:ec_fs_req_delete::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_examine	typeref:struct:ec_fs_req_examine::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_get_args	typeref:struct:ec_fs_req_get_args::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_get_disc_free	typeref:struct:ec_fs_req_get_disc_free::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_get_discs	typeref:struct:ec_fs_req_get_discs::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_get_eof	typeref:struct:ec_fs_req_get_eof::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_get_info	typeref:struct:ec_fs_req_get_info::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_get_user	typeref:struct:ec_fs_req_get_user::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_get_user_free	typeref:struct:ec_fs_req_get_user_free::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_get_users_on	typeref:struct:ec_fs_req_get_users_on::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_load	typeref:struct:ec_fs_req_load::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_open	typeref:struct:ec_fs_req_open::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_save	typeref:struct:ec_fs_req_save::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_set_args	typeref:struct:ec_fs_req_set_args::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_set_info	typeref:struct:ec_fs_req_set_info::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_set_opt4	typeref:struct:ec_fs_req_set_opt4::ec_fs_req
std_rx	fs_proto.h	/^	struct ec_fs_req std_rx;$/;"	m	struct:ec_fs_req_set_time	typeref:struct:ec_fs_req_set_time::ec_fs_req
std_rx	fs_proto.h	/^    struct ec_fs_reply std_rx;$/;"	m	struct:ec_fs_req_set_user_free	typeref:struct:ec_fs_req_set_user_free::ec_fs_reply
std_si	fs_proto.h	/^	struct ec_fs_req_set_info std_si;$/;"	m	struct:ec_fs_req_set_info_access	typeref:struct:ec_fs_req_set_info_access::ec_fs_req_set_info
std_si	fs_proto.h	/^	struct ec_fs_req_set_info std_si;$/;"	m	struct:ec_fs_req_set_info_all	typeref:struct:ec_fs_req_set_info_all::ec_fs_req_set_info
std_si	fs_proto.h	/^	struct ec_fs_req_set_info std_si;$/;"	m	struct:ec_fs_req_set_info_exec	typeref:struct:ec_fs_req_set_info_exec::ec_fs_req_set_info
std_si	fs_proto.h	/^	struct ec_fs_req_set_info std_si;$/;"	m	struct:ec_fs_req_set_info_load	typeref:struct:ec_fs_req_set_info_load::ec_fs_req_set_info
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_cat_header	typeref:struct:ec_fs_reply_cat_header::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_cli_load	typeref:struct:ec_fs_reply_cli_load::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_cli_save	typeref:struct:ec_fs_reply_cli_save::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_create	typeref:struct:ec_fs_reply_create::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_delete	typeref:struct:ec_fs_reply_delete::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_dir	typeref:struct:ec_fs_reply_dir::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_examine	typeref:struct:ec_fs_reply_examine::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_examine_all	typeref:struct:ec_fs_reply_examine_all::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_examine_name	typeref:struct:ec_fs_reply_examine_name::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_get_args	typeref:struct:ec_fs_reply_get_args::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_get_disc_free	typeref:struct:ec_fs_reply_get_disc_free::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_get_discs	typeref:struct:ec_fs_reply_get_discs::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_get_eof	typeref:struct:ec_fs_reply_get_eof::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_get_time	typeref:struct:ec_fs_reply_get_time::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_get_uenv	typeref:struct:ec_fs_reply_get_uenv::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_get_user	typeref:struct:ec_fs_reply_get_user::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_get_user_free	typeref:struct:ec_fs_reply_get_user_free::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_get_users_on	typeref:struct:ec_fs_reply_get_users_on::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_get_version	typeref:struct:ec_fs_reply_get_version::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_getbyte	typeref:struct:ec_fs_reply_getbyte::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_getbytes2	typeref:struct:ec_fs_reply_getbytes2::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_info_access	typeref:struct:ec_fs_reply_info_access::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_info_all	typeref:struct:ec_fs_reply_info_all::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_info_ctime	typeref:struct:ec_fs_reply_info_ctime::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_info_dir	typeref:struct:ec_fs_reply_info_dir::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_info_meta	typeref:struct:ec_fs_reply_info_meta::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_info_size	typeref:struct:ec_fs_reply_info_size::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_info_uid	typeref:struct:ec_fs_reply_info_uid::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_load1	typeref:struct:ec_fs_reply_load1::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_load2	typeref:struct:ec_fs_reply_load2::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_logon	typeref:struct:ec_fs_reply_logon::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_open	typeref:struct:ec_fs_reply_open::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_putbytes1	typeref:struct:ec_fs_reply_putbytes1::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_putbytes2	typeref:struct:ec_fs_reply_putbytes2::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_save1	typeref:struct:ec_fs_reply_save1::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_save2	typeref:struct:ec_fs_reply_save2::ec_fs_reply
std_tx	fs_proto.h	/^	struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_sdisc	typeref:struct:ec_fs_reply_sdisc::ec_fs_reply
std_tx	fs_proto.h	/^    struct ec_fs_reply std_tx;$/;"	m	struct:ec_fs_reply_set_user_free	typeref:struct:ec_fs_reply_set_user_free::ec_fs_reply
strpad	fs_util.c	/^strpad(char *s, int c, size_t len)$/;"	f
subdir	makefile	/^subdir = .$/;"	m
sysconfdir	makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
tardir	makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	makefile	/^	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz$/;"	m
tardir	makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
tardir	makefile	/^	tardir=$(distdir) && $(am__tar) | zstd -c $${ZSTD_CLEVEL-$${ZSTD_OPT--19}} >$(distdir).tar.zst$/;"	m
target_alias	makefile	/^target_alias = $/;"	m
ten	fs_proto.h	/^	uint8_t ten; \/* these two used by Beeb NFS apparently *\/$/;"	m	struct:ec_fs_reply_info_dir
test_varargs_macros	configure	/^  test_varargs_macros ();$/;"	f
top_build_prefix	makefile	/^top_build_prefix = $/;"	m
top_builddir	makefile	/^top_builddir = .$/;"	m
top_distdir	makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	makefile	/^top_srcdir = .$/;"	m
total_blocks	fs_proto.h	/^	uint8_t total_blocks[3]; \/* ditto *\/$/;"	m	struct:ec_fs_reply_get_disc_free
transform	makefile	/^transform = $(program_transform_name)$/;"	m
type	aun.h	/^	uint8_t type;$/;"	m	struct:aun_packet
type	fileserver.h	/^	enum 	fs_handle_type type;$/;"	m	struct:fs_handle	typeref:enum:fs_handle::fs_handle_type
type	fs_filetype.c	/^	int type;$/;"	m	struct:fs_typemap	file:
type	fs_proto.h	/^	uint8_t type;$/;"	m	struct:ec_fs_reply_info_access
type	fs_proto.h	/^	uint8_t type;$/;"	m	struct:ec_fs_reply_info_all
type	fs_proto.h	/^	uint8_t type;$/;"	m	struct:ec_fs_reply_info_ctime
type	fs_proto.h	/^	uint8_t type;$/;"	m	struct:ec_fs_reply_info_meta
type	fs_proto.h	/^	uint8_t type;$/;"	m	struct:ec_fs_reply_info_size
type	fs_proto.h	/^	uint8_t type;$/;"	m	struct:ec_fs_reply_info_uid
typemap	fs_filetype.c	/^static struct fs_typemap_head typemap = TAILQ_HEAD_INITIALIZER(typemap);$/;"	v	typeref:struct:fs_typemap_head	file:
undef0	fs_proto.h	/^	uint8_t undef0; \/* XXX *\/$/;"	m	struct:ec_fs_reply_examine_name
undef0	fs_proto.h	/^	uint8_t undef0;$/;"	m	struct:ec_fs_reply_examine
undef0	fs_proto.h	/^	uint8_t undef0;$/;"	m	struct:ec_fs_reply_examine_all
undef0	fs_proto.h	/^	uint8_t undef0;$/;"	m	struct:ec_fs_reply_info_dir
unpidfile	aund.c	/^unpidfile(void)$/;"	f	file:
unput	conf_lex.c	/^#define unput(/;"	d	file:
urd	fileserver.h	/^	char *(*urd)(char const *);$/;"	m	struct:user_funcs
urd	fs_proto.h	/^	uint8_t urd;$/;"	m	struct:ec_fs_reply_logon
urd	fs_proto.h	/^	uint8_t urd;$/;"	m	struct:ec_fs_reply_sdisc
urd	fs_proto.h	/^	uint8_t urd;$/;"	m	struct:ec_fs_req
usage	aund.c	/^usage(void)$/;"	f	file:
use_ptr	fs_proto.h	/^	uint8_t use_ptr;$/;"	m	struct:ec_fs_req_getbytes
use_ptr	fs_proto.h	/^	uint8_t use_ptr;$/;"	m	struct:ec_fs_req_putbytes
user	fs_proto.h	/^	char user[0];$/;"	m	struct:ec_fs_req_get_user
user	fs_proto.h	/^	char user[10];$/;"	m	struct:ec_fs_user_on
user_funcs	fileserver.h	/^struct user_funcs {$/;"	s
user_null	user_null.c	/^struct user_funcs const user_null = {$/;"	v
user_pw	pw.c	/^struct user_funcs const user_pw = {$/;"	v
userfuncs	fileserver.c	/^struct user_funcs const * userfuncs;$/;"	v
username	fs_proto.h	/^	char username[0];$/;"	m	struct:ec_fs_req_get_user_free
username	fs_proto.h	/^    char username[0];$/;"	m	struct:ec_fs_req_set_user_free
users	fs_proto.h	/^	struct ec_fs_user_on users[0];$/;"	m	struct:ec_fs_reply_get_users_on	typeref:struct:ec_fs_reply_get_users_on::ec_fs_user_on
using_syslog	aund.c	/^int using_syslog = 1;$/;"	v
val	fs_filetype.c	/^			mode_t val;$/;"	m	struct:fs_typemap::__anon1::__anon2	file:
val	fs_proto.h	/^	uint8_t val[3];$/;"	m	struct:ec_fs_reply_get_args
val	fs_proto.h	/^	uint8_t val[3];$/;"	m	struct:ec_fs_req_set_args
validate	fileserver.h	/^	char *(*validate)(char *, char const *, int *);$/;"	m	struct:user_funcs
version	fs_proto.h	/^	char version[0];$/;"	m	struct:ec_fs_reply_get_version
wcfrag	fs_nametrans.c	/^wcfrag(char *frag, char *file)$/;"	f	file:
wcmatch	fs_nametrans.c	/^wcmatch(char *wc, char *file, int len)$/;"	f	file:
xmit	extern.h	/^	ssize_t (*xmit)(struct aun_packet *pkt,$/;"	m	struct:aun_funcs
year_month	fs_proto.h	/^	uint8_t year_month; \/* Four bits each *\/$/;"	m	struct:ec_fs_date
yy_accept	conf_lex.c	/^static yyconst flex_int16_t yy_accept[165] =$/;"	v	file:
yy_at_bol	conf_lex.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	conf_lex.c	/^static yyconst flex_int16_t yy_base[170] =$/;"	v	file:
yy_bs_column	conf_lex.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	conf_lex.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	conf_lex.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	conf_lex.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_stack	conf_lex.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	conf_lex.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	conf_lex.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	conf_lex.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	conf_lex.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	conf_lex.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	conf_lex.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	conf_lex.c	/^static yyconst flex_int16_t yy_chk[239] =$/;"	v	file:
yy_create_buffer	conf_lex.c	/^#define yy_create_buffer /;"	d	file:
yy_def	conf_lex.c	/^static yyconst flex_int16_t yy_def[170] =$/;"	v	file:
yy_delete_buffer	conf_lex.c	/^#define yy_delete_buffer /;"	d	file:
yy_did_buffer_switch_on_eof	conf_lex.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	conf_lex.c	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fatal_error	conf_lex.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:
yy_fill_buffer	conf_lex.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_debug	conf_lex.c	/^#define yy_flex_debug /;"	d	file:
yy_flex_strlen	conf_lex.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:
yy_flex_strncpy	conf_lex.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:
yy_flush_buffer	conf_lex.c	/^#define yy_flush_buffer /;"	d	file:
yy_get_next_buffer	conf_lex.c	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_previous_state	conf_lex.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:
yy_hold_char	conf_lex.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	conf_lex.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	conf_lex.c	/^#define yy_init_buffer /;"	d	file:
yy_init_globals	conf_lex.c	/^static int yy_init_globals (void)$/;"	f	file:
yy_input_file	conf_lex.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	conf_lex.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	conf_lex.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_last_accepting_cpos	conf_lex.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	conf_lex.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	conf_lex.c	/^#define yy_load_buffer_state /;"	d	file:
yy_meta	conf_lex.c	/^static yyconst flex_int32_t yy_meta[30] =$/;"	v	file:
yy_n_chars	conf_lex.c	/^	yy_size_t yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	conf_lex.c	/^static yy_size_t yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	conf_lex.c	/^#define yy_new_buffer /;"	d	file:
yy_nxt	conf_lex.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	conf_lex.c	/^static yyconst flex_int16_t yy_nxt[239] =$/;"	v	file:
yy_set_bol	conf_lex.c	/^#define yy_set_bol(/;"	d	file:
yy_set_interactive	conf_lex.c	/^#define yy_set_interactive(/;"	d	file:
yy_size_t	conf_lex.c	/^typedef size_t yy_size_t;$/;"	t	file:
yy_start	conf_lex.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_state_type	conf_lex.c	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	conf_lex.c	/^#define yy_switch_to_buffer /;"	d	file:
yy_trans_info	conf_lex.c	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	conf_lex.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_verify	conf_lex.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	conf_lex.c	/^#define yyalloc /;"	d	file:
yyconst	conf_lex.c	/^#define yyconst /;"	d	file:
yyconst	conf_lex.c	/^#define yyconst$/;"	d	file:
yyfree	conf_lex.c	/^#define yyfree /;"	d	file:
yyin	conf_lex.c	/^#define yyin /;"	d	file:
yyinput	conf_lex.c	/^    static int yyinput (void)$/;"	f	file:
yyleng	conf_lex.c	/^#define yyleng /;"	d	file:
yyless	conf_lex.c	/^#define yyless(/;"	d	file:
yyless	conf_lex.c	/^#undef yyless$/;"	d	file:
yylex	conf_lex.c	/^#define yylex /;"	d	file:
yylineno	conf_lex.c	/^#define yylineno /;"	d	file:
yymore	conf_lex.c	/^#define yymore(/;"	d	file:
yyout	conf_lex.c	/^#define yyout /;"	d	file:
yyrealloc	conf_lex.c	/^#define yyrealloc /;"	d	file:
yyrestart	conf_lex.c	/^#define yyrestart /;"	d	file:
yyterminate	conf_lex.c	/^#define yyterminate(/;"	d	file:
yytext	conf_lex.c	/^#define yytext /;"	d	file:
yytext_ptr	conf_lex.c	/^#define yytext_ptr /;"	d	file:
yyunput	conf_lex.c	/^    static void yyunput (int c, register char * yy_bp )$/;"	f	file:
yywrap	conf_lex.c	/^#define yywrap /;"	d	file:
zero	fs_proto.h	/^	uint8_t zero;$/;"	m	struct:ec_fs_reply_info_dir
zero	fs_proto.h	/^	uint8_t zero;$/;"	m	struct:ec_fs_reply_putbytes2
